{"version":3,"file":"okta-angular.js","sources":["../package/src/okta/models/okta.config.ts","../package/src/okta/components/callback.component.ts","../package/src/okta/okta.guard.ts","../package/src/okta/services/auth-state.service.ts","../package/src/okta/has-any-group.directive.ts","../package/src/okta/packageInfo.ts","../package/src/okta/okta.module.ts"],"names":["tslib_1.__param","tslib_1.__decorate"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { InjectionToken, Injector } from '@angular/core';\nimport { OktaAuth } from '@okta/okta-auth-js';\n\nexport type AuthRequiredFunction = (oktaAuth: OktaAuth, injector: Injector) => void;\n\nexport interface TestingObject {\n  disableHttpsCheck: boolean;\n}\n\nexport interface OktaConfig {\n  oktaAuth: OktaAuth;\n  onAuthRequired?: AuthRequiredFunction;\n  onAuthResume?: AuthRequiredFunction;\n  testing?: TestingObject;\n}\n\nexport const OKTA_CONFIG = new InjectionToken<OktaConfig>('okta.config.angular');\nexport const OKTA_AUTH = new InjectionToken<OktaAuth>('okta.auth');\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit, Optional, Injector, Inject } from '@angular/core';\nimport { OktaAuth } from '@okta/okta-auth-js';\nimport { OKTA_CONFIG, OktaConfig, OKTA_AUTH } from '../models/okta.config';\n\n@Component({\n  template: `<div>{{error}}</div>`\n})\nexport class OktaCallbackComponent implements OnInit {\n  error: string;\n\n  constructor(\n    @Inject(OKTA_CONFIG) private config: OktaConfig,\n    @Inject(OKTA_AUTH) private oktaAuth: OktaAuth,\n    @Optional() private injector?: Injector\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n      await this.oktaAuth.handleLoginRedirect();\n    } catch (e) {\n      // Callback from social IDP. Show custom login page to continue.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore Supports auth-js v5 & v6\n      const isInteractionRequiredError = this.oktaAuth.isInteractionRequiredError || this.oktaAuth.idx.isInteractionRequiredError;\n      if (isInteractionRequiredError(e) && this.injector) {\n        const { onAuthResume, onAuthRequired } = this.config;\n        const callbackFn = onAuthResume || onAuthRequired;\n        if (callbackFn) {\n          callbackFn(this.oktaAuth, this.injector);\n          return;\n        }\n      }\n      this.error = e.toString();\n    }\n  }\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Injectable, Injector, Inject } from '@angular/core';\nimport {\n  CanActivate,\n  CanActivateChild,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n  NavigationStart, \n  Event,\n  CanLoad,\n  Route,\n  UrlSegment\n} from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { OktaAuth, AuthState } from '@okta/okta-auth-js';\n\nimport { AuthRequiredFunction, OktaConfig, OKTA_CONFIG, OKTA_AUTH } from './models/okta.config';\n\n@Injectable()\nexport class OktaAuthGuard implements CanActivate, CanActivateChild, CanLoad {\n  private state: RouterStateSnapshot;\n  private onAuthRequired?: AuthRequiredFunction;\n\n\n  constructor(\n    @Inject(OKTA_CONFIG) private config: OktaConfig, \n    @Inject(OKTA_AUTH) private oktaAuth: OktaAuth, \n    private injector: Injector\n  ) { \n    this.onAuthRequired = this.config.onAuthRequired;\n\n    // Unsubscribe updateAuthStateListener when route change\n    const router = injector.get(Router);\n    router.events.pipe(\n      filter((e: Event) => e instanceof NavigationStart && this.state && this.state.url !== e.url)\n    ).subscribe(() => {\n      this.oktaAuth.authStateManager.unsubscribe(this.updateAuthStateListener);\n    });\n  }\n\n  async canLoad(route: Route, segments: UrlSegment[]): Promise<boolean> {\n    this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n\n    const isAuthenticated = await this.oktaAuth.isAuthenticated();\n    if (isAuthenticated) {\n      return true;\n    }\n\n    const originalUri = segments[0].path;\n    await this.handleLogin(originalUri);\n\n    return false;\n  }\n\n  /**\n   * Gateway for protected route. Returns true if there is a valid accessToken,\n   * otherwise it will cache the route and start the login flow.\n   * @param route\n   * @param state\n   */\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    // Track states for current route\n    this.state = state;\n    this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n\n    // Protect the route after accessing\n    this.oktaAuth.authStateManager.subscribe(this.updateAuthStateListener);\n    const isAuthenticated = await this.oktaAuth.isAuthenticated();\n    if (isAuthenticated) {\n      return true;\n    }\n\n    await this.handleLogin(state.url);\n\n    return false;\n  }\n\n  async canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean> {\n    return this.canActivate(route, state);\n  }\n\n  private async handleLogin(originalUri: string): Promise<void> {\n    // Store the current path\n    this.oktaAuth.setOriginalUri(originalUri);\n\n    if (this.onAuthRequired) {\n      this.onAuthRequired(this.oktaAuth, this.injector);\n    } else {\n      this.oktaAuth.signInWithRedirect();\n    }\n  }\n\n  private updateAuthStateListener = (authState: AuthState) => {\n    if (!authState.isAuthenticated) {\n      this.handleLogin(this.state.url);\n    }\n  };\n\n}\n","import { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { AuthState, OktaAuth, UserClaims } from '@okta/okta-auth-js';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { OKTA_AUTH } from '../models/okta.config';\n\nconst defaultAuthState = {\n  isAuthenticated: false\n};\n\nexport type Groups = string | string[] | { [key: string]: string[] };\n\n@Injectable()\nexport class OktaAuthStateService implements OnDestroy {\n  private _authState: BehaviorSubject<AuthState> = new BehaviorSubject<AuthState>(defaultAuthState);\n  \n  // only expose readonly property\n  public readonly authState$: Observable<AuthState> = this._authState.asObservable();\n\n  constructor(@Inject(OKTA_AUTH) private oktaAuth: OktaAuth) {\n    this.updateAuthState = this.updateAuthState.bind(this);\n\n    // set initial authState\n    const initialAuthState = this.oktaAuth.authStateManager.getAuthState() || defaultAuthState;\n    this._authState.next(initialAuthState);\n\n    // subscribe to future changes\n    this.oktaAuth.authStateManager.subscribe(this.updateAuthState);\n  }\n\n  ngOnDestroy(): void {\n    this.oktaAuth.authStateManager.unsubscribe(this.updateAuthState);\n  }\n\n  // Observes as true when any group input can match groups from user claims \n  hasAnyGroups(groups: Groups): Observable<boolean> {\n    return this.authState$.pipe(\n      mergeMap(async ({ isAuthenticated, idToken }) => {\n        // return false when not authenticated or openid is not in scopes\n        if (!isAuthenticated || !idToken) {\n          return false;\n        }\n\n        // transform inputs to consistent object format\n        if (typeof groups === 'string') {\n          groups = { groups: [groups] };\n        }\n        if (Array.isArray(groups)) {\n          groups = { groups };\n        }\n\n        const key = Object.keys(groups)[0] as keyof UserClaims;\n        const value = groups[key];\n\n        // groups or custom claims is available in idToken\n        if (idToken.claims[key]) {\n          return value.some((authority: string) => (idToken.claims[key] as unknown as string[]).includes(authority));\n        }\n\n        // try /userinfo endpoint when thin idToken (no groups claim) is returned\n        // https://developer.okta.com/docs/concepts/api-access-management/#tokens-and-scopes\n        const userInfo = await this.oktaAuth.getUser();\n        if (!userInfo[key]) {\n          return false;\n        }\n        return value.some((authority: string) => (userInfo[key] as unknown as string[]).includes(authority));\n      })\n    );\n  }\n\n  private updateAuthState(authState: AuthState): void {\n    this._authState.next(authState);\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { OktaAuthStateService, Groups } from './services/auth-state.service';\n\n@Directive({ selector: '[oktaHasAnyGroup]'})\nexport class OktaHasAnyGroupDirective {\n  private previousIsAuthorized: boolean;\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private authStateService: OktaAuthStateService\n  ) { }\n\n  @Input() set oktaHasAnyGroup(groups: Groups) {\n    this.authStateService.hasAnyGroups(groups)\n      .subscribe(isAuthorized => {\n        // don't update UI if no state change\n        if (isAuthorized === this.previousIsAuthorized) {\n          return;\n        }\n        this.previousIsAuthorized = isAuthorized;\n        this.viewContainer.clear();\n        if (isAuthorized) {\n          this.viewContainer.createEmbeddedView(this.templateRef);\n        }\n      });\n  }\n}\n","export default {\n  'name': '@okta/okta-angular',\n  'version': '5.2.0',\n  'authJSMinSupportedVersion': '5.3.1'\n};\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { NgModule, Inject, Optional, VERSION } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaCallbackComponent } from './components/callback.component';\nimport { OktaAuthGuard } from './okta.guard';\nimport { OktaAuthStateService } from './services/auth-state.service';\nimport { OktaHasAnyGroupDirective } from './has-any-group.directive';\nimport { OktaConfig, OKTA_CONFIG, OKTA_AUTH } from './models/okta.config';\nimport { AuthSdkError, OktaAuth, toRelativeUrl } from '@okta/okta-auth-js';\nimport { compare } from 'compare-versions';\nimport packageInfo from './packageInfo';\n\nexport function oktaAuthFactory(config: OktaConfig): OktaAuth {\n  return config.oktaAuth;\n}\n\n@NgModule({\n  declarations: [\n    OktaCallbackComponent,\n    OktaHasAnyGroupDirective,\n  ],\n  exports: [\n    OktaCallbackComponent,\n    OktaHasAnyGroupDirective,\n  ],\n  providers: [\n    OktaAuthGuard,\n    OktaAuthStateService,\n    {\n      provide: OKTA_AUTH,\n      useFactory: oktaAuthFactory,\n      deps: [ OKTA_CONFIG ]\n    },\n  ]\n})\nexport class OktaAuthModule {\n  constructor(\n    @Inject(OKTA_CONFIG) config: OktaConfig, \n    @Optional() location?: Location, \n    @Optional() router?: Router\n  ) {\n    const { oktaAuth } = config;\n\n    const isAuthJsSupported = oktaAuth._oktaUserAgent && compare(oktaAuth._oktaUserAgent.getVersion(), packageInfo.authJSMinSupportedVersion, '>=');\n    if (!isAuthJsSupported) {\n      throw new AuthSdkError(`Passed in oktaAuth is not compatible with the SDK, minimum supported okta-auth-js version is ${packageInfo.authJSMinSupportedVersion}.`);\n    }\n\n    // Add Okta UA\n    oktaAuth._oktaUserAgent.addEnvironment(`${packageInfo.name}/${packageInfo.version}`);\n    oktaAuth._oktaUserAgent.addEnvironment(`Angular/${VERSION.full}`);\n\n    // Provide a default implementation of `restoreOriginalUri`\n    if (!oktaAuth.options.restoreOriginalUri && router && location) {\n      oktaAuth.options.restoreOriginalUri = async (_, originalUri: string | undefined) => {\n        const baseUrl = window.location.origin + location.prepareExternalUrl('');\n        const routePath = toRelativeUrl(originalUri || '/', baseUrl);\n        router.navigateByUrl(routePath);\n      };\n    }\n\n    // Start services\n    oktaAuth.start();\n  }\n\n}\n"]}