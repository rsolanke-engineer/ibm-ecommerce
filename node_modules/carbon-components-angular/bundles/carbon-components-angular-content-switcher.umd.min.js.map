{"version":3,"sources":["ng://carbon-components-angular/content-switcher/content-switcher-option.directive.ts","ng://carbon-components-angular/content-switcher/content-switcher.component.ts","ng://carbon-components-angular/content-switcher/content-switcher.module.ts"],"sourcesContent":["import {\n\tDirective,\n\tHostBinding,\n\tInput,\n\tHostListener,\n\tOutput,\n\tEventEmitter,\n\tElementRef,\n\tOnInit,\n\tRenderer2\n} from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmContentOption]\"\n})\nexport class ContentSwitcherOption implements OnInit {\n\t/**\n\t * Used to activate the option. Only one option may be `active` at a time\n\t */\n\t@Input() set active (value: boolean) {\n\t\tthis._active = value;\n\t\tthis.selectedClass = value;\n\t\tthis.ariaSelected = value;\n\t\tthis.tabindex = value ? \"0\" : \"-1\";\n\t}\n\n\tget active() {\n\t\treturn this._active;\n\t}\n\n\t/**\n\t * Internal name for the option.\n\t * Should be something that identifies the option to the application.\n\t * Accessible from the `ContentSwitcher` `selected` emitter\n\t */\n\t@Input() name = \"option\";\n\n\t/**\n\t * Emits when the option is selected.\n\t */\n\t@Output() selected = new EventEmitter<boolean>();\n\n\t@Output() onClick = new EventEmitter<MouseEvent>();\n\n\t@Output() onFocus = new EventEmitter<FocusEvent>();\n\n\t@HostBinding(\"class\") switcherClass = \"bx--content-switcher-btn\";\n\t@HostBinding(\"class.bx--content-switcher--selected\") selectedClass = false;\n\t@HostBinding(\"attr.role\") role = \"tab\";\n\t@HostBinding(\"attr.aria-selected\") ariaSelected = false;\n\t@HostBinding(\"attr.tabIndex\") tabindex = \"-1\";\n\n\tprotected _active = false;\n\n\tconstructor(private renderer: Renderer2, private hostElement: ElementRef) {}\n\n\t@HostListener(\"click\", [\"$event\"])\n\thostClick(event: MouseEvent) {\n\t\tthis.onClick.emit(event);\n\t\t// skip setting and emitting if the option is already active\n\t\tif (this.active) { return; }\n\t\tthis.active = true;\n\t\tthis.selected.emit(true);\n\t}\n\n\t@HostListener(\"focus\", [\"$event\"])\n\tdoFocus(event: FocusEvent) {\n\t\tthis.onFocus.emit(event);\n\t\t// skip setting and emitting if the option is already active\n\t\tif (this.active) { return; }\n\t\tthis.active = true;\n\t\tthis.selected.emit(true);\n\t}\n\n\t/*\n\t* encapsulating the content in a span with bx--content-switcher__label class\n\t* to mimic what is done in the react version\n\t*/\n\tngOnInit(): void {\n\t\tconst hostNativeElement = (this.hostElement.nativeElement as HTMLElement);\n\t\tconst spanWrapper = this.renderer.createElement(\"span\");\n\t\tthis.renderer.addClass(spanWrapper, \"bx--content-switcher__label\");\n\t\tconst hostChildren: ChildNode[] = [];\n\t\thostNativeElement.childNodes.forEach(node => hostChildren.push(node));\n\t\thostChildren.forEach(node => {\n\t\t\tthis.renderer.removeChild(hostNativeElement, node);\n\t\t\tthis.renderer.appendChild(spanWrapper, node);\n\t\t});\n\t\tthis.renderer.appendChild(hostNativeElement, spanWrapper);\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tContentChildren,\n\tQueryList,\n\tOutput,\n\tEventEmitter,\n\tAfterViewInit,\n\tHostListener,\n\tElementRef\n} from \"@angular/core\";\nimport { ContentSwitcherOption } from \"./content-switcher-option.directive\";\nimport { isFocusInLastItem, isFocusInFirstItem } from \"carbon-components-angular/common\";\n\n/**\n * The content switcher can be used for toggling between distinct options.\n * Similar to tabs, but without an associated content panel\n *\n * [See demo](../../?path=/story/components-content-switcher--basic)\n *\n * ```html\n * <ibm-content-switcher (selected)=\"selected($event)\">\n *\t\t<button ibmContentOption>First section</button>\n *\t\t<button ibmContentOption>Second section</button>\n *\t\t<button ibmContentOption>Third section</button>\n *\t</ibm-content-switcher>\n *\t```\n *\n * <example-url>../../iframe.html?id=components-content-switcher--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-content-switcher\",\n\ttemplate: `\n\t\t<div\n\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\tclass=\"bx--content-switcher\"\n\t\t\t[class.bx--content-switcher--light]=\"theme === 'light'\"\n\t\t\trole=\"tablist\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t`\n})\nexport class ContentSwitcher implements AfterViewInit {\n\t@Input() ariaLabel = \"content switcher\";\n\t/**\n\t * `light` or `dark` content switcher theme\n\t */\n\t@Input() theme: \"light\" | \"dark\" = \"dark\";\n\n\t/**\n\t * Emits the activated `ContentSwitcherOption`\n\t */\n\t@Output() selected = new EventEmitter<ContentSwitcherOption>();\n\n\t@ContentChildren(ContentSwitcherOption) options: QueryList<ContentSwitcherOption>;\n\n\tconstructor(protected elementRef: ElementRef) {}\n\n\tngAfterViewInit() {\n\t\tconst firstActive = this.options.find(option => option.active);\n\t\t// delay setting active until the DOM has settled\n\t\tif (!firstActive) {\n\t\t\tsetTimeout(() => this.options.first.active = true);\n\t\t}\n\t\t// subscribe to each item, emit when one is selected, and reset the active states\n\t\tthis.options.forEach(option => {\n\t\t\toption.selected.subscribe((_: boolean) => {\n\t\t\t\tconst active = option;\n\t\t\t\tthis.options.forEach(option => {\n\t\t\t\t\tif (option !== active) {\n\t\t\t\t\t\toption.active = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.selected.emit(active);\n\t\t\t});\n\t\t});\n\t}\n\n\t@HostListener(\"keydown\", [\"$event\"])\n\thostkeys(event: KeyboardEvent) {\n\t\tconst buttonList = Array.from<any>(this.elementRef.nativeElement.querySelectorAll(\"[ibmContentOption]\"));\n\n\t\tswitch (event.key) {\n\t\t\tcase \"Right\": // IE specific value\n\t\t\tcase \"ArrowRight\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!isFocusInLastItem(event, buttonList))  {\n\t\t\t\t\tconst index = buttonList.findIndex(item => item === event.target);\n\t\t\t\t\tbuttonList[index + 1].focus();\n\t\t\t\t} else {\n\t\t\t\t\tbuttonList[0].focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"Left\": // IE specific value\n\t\t\tcase \"ArrowLeft\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!isFocusInFirstItem(event, buttonList))  {\n\t\t\t\t\tconst index = buttonList.findIndex(item => item === event.target);\n\t\t\t\t\tbuttonList[index - 1].focus();\n\t\t\t\t} else {\n\t\t\t\t\tbuttonList[buttonList.length - 1].focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"Home\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbuttonList[0].focus();\n\t\t\t\tbreak;\n\n\t\t\tcase \"End\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbuttonList[buttonList.length - 1].focus();\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ContentSwitcher } from \"./content-switcher.component\";\nimport { ContentSwitcherOption } from \"./content-switcher-option.directive\";\n\n@NgModule({\n\tdeclarations: [\n\t\tContentSwitcher,\n\t\tContentSwitcherOption\n\t],\n\texports: [\n\t\tContentSwitcher,\n\t\tContentSwitcherOption\n\t],\n\timports: [CommonModule]\n})\nexport class ContentSwitcherModule { }\n"],"names":["Object","defineProperty","ContentSwitcherOption","prototype","this","_active","value","selectedClass","ariaSelected","tabindex","hostClick","event","onClick","emit","active","selected","doFocus","onFocus","ngOnInit","_this","hostNativeElement","hostElement","nativeElement","spanWrapper","renderer","createElement","addClass","hostChildren","childNodes","forEach","node","push","removeChild","appendChild","Directive","args","selector","Renderer2","ElementRef","Input","Output","HostBinding","HostListener","name","EventEmitter","switcherClass","role","ContentSwitcher","ngAfterViewInit","options","find","option","setTimeout","first","subscribe","_","hostkeys","index","buttonList","Array","from","elementRef","querySelectorAll","key","preventDefault","isFocusInLastItem","focus","findIndex","item","target","isFocusInFirstItem","length","Component","template","ContentChildren","ariaLabel","theme","NgModule","declarations","exports","imports","CommonModule","ContentSwitcherModule"],"mappings":"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"}