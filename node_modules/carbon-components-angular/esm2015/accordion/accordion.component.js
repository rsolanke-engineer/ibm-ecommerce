/**
 *
 * carbon-angular v0.0.0 | accordion.component.js
 *
 * Copyright 2014, 2022 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, ContentChildren, QueryList } from "@angular/core";
import { AccordionItem } from "./accordion-item.component";
/**
 * [See demo](../../?path=/story/components-accordion--basic)
 *
 * <example-url>../../iframe.html?id=components-accordion--basic</example-url>
 */
export class Accordion {
    constructor() {
        this.align = "end";
        this._skeleton = false;
    }
    set skeleton(value) {
        this._skeleton = value;
        this.updateChildren();
    }
    get skeleton() {
        return this._skeleton;
    }
    ngAfterContentInit() {
        this.updateChildren();
    }
    updateChildren() {
        if (this.children) {
            this.children.toArray().forEach(child => child.skeleton = this.skeleton);
        }
    }
}
Accordion.decorators = [
    { type: Component, args: [{
                selector: "ibm-accordion",
                template: `
		<ul class="bx--accordion"
			[class.bx--accordion--end]="align == 'end'"
			[class.bx--accordion--start]="align == 'start'">
			<ng-content></ng-content>
		</ul>
	`
            }] }
];
Accordion.propDecorators = {
    align: [{ type: Input }],
    children: [{ type: ContentChildren, args: [AccordionItem,] }],
    skeleton: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvYWNjb3JkaW9uLyIsInNvdXJjZXMiOlsiYWNjb3JkaW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFDTCxlQUFlLEVBQ2YsU0FBUyxFQUVULE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUUzRDs7OztHQUlHO0FBV0gsTUFBTSxPQUFPLFNBQVM7SUFWdEI7UUFXVSxVQUFLLEdBQW9CLEtBQUssQ0FBQztRQUk5QixjQUFTLEdBQUcsS0FBSyxDQUFDO0lBcUI3QixDQUFDO0lBbkJBLElBQ0ksUUFBUSxDQUFDLEtBQVU7UUFDdEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDdkIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxJQUFJLFFBQVE7UUFDWCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDdkIsQ0FBQztJQUVELGtCQUFrQjtRQUNqQixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVTLGNBQWM7UUFDdkIsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDekU7SUFDRixDQUFDOzs7WUFuQ0QsU0FBUyxTQUFDO2dCQUNWLFFBQVEsRUFBRSxlQUFlO2dCQUN6QixRQUFRLEVBQUU7Ozs7OztFQU1UO2FBQ0Q7OztvQkFFQyxLQUFLO3VCQUVMLGVBQWUsU0FBQyxhQUFhO3VCQUk3QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRJbnB1dCxcblx0Q29udGVudENoaWxkcmVuLFxuXHRRdWVyeUxpc3QsXG5cdEFmdGVyQ29udGVudEluaXRcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEFjY29yZGlvbkl0ZW0gfSBmcm9tIFwiLi9hY2NvcmRpb24taXRlbS5jb21wb25lbnRcIjtcblxuLyoqXG4gKiBbU2VlIGRlbW9dKC4uLy4uLz9wYXRoPS9zdG9yeS9jb21wb25lbnRzLWFjY29yZGlvbi0tYmFzaWMpXG4gKlxuICogPGV4YW1wbGUtdXJsPi4uLy4uL2lmcmFtZS5odG1sP2lkPWNvbXBvbmVudHMtYWNjb3JkaW9uLS1iYXNpYzwvZXhhbXBsZS11cmw+XG4gKi9cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tYWNjb3JkaW9uXCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PHVsIGNsYXNzPVwiYngtLWFjY29yZGlvblwiXG5cdFx0XHRbY2xhc3MuYngtLWFjY29yZGlvbi0tZW5kXT1cImFsaWduID09ICdlbmQnXCJcblx0XHRcdFtjbGFzcy5ieC0tYWNjb3JkaW9uLS1zdGFydF09XCJhbGlnbiA9PSAnc3RhcnQnXCI+XG5cdFx0XHQ8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG5cdFx0PC91bD5cblx0YFxufSlcbmV4cG9ydCBjbGFzcyBBY2NvcmRpb24gaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcblx0QElucHV0KCkgYWxpZ246IFwic3RhcnRcIiB8IFwiZW5kXCIgPSBcImVuZFwiO1xuXG5cdEBDb250ZW50Q2hpbGRyZW4oQWNjb3JkaW9uSXRlbSkgY2hpbGRyZW46IFF1ZXJ5TGlzdDxBY2NvcmRpb25JdGVtPjtcblxuXHRwcm90ZWN0ZWQgX3NrZWxldG9uID0gZmFsc2U7XG5cblx0QElucHV0KClcblx0c2V0IHNrZWxldG9uKHZhbHVlOiBhbnkpIHtcblx0XHR0aGlzLl9za2VsZXRvbiA9IHZhbHVlO1xuXHRcdHRoaXMudXBkYXRlQ2hpbGRyZW4oKTtcblx0fVxuXG5cdGdldCBza2VsZXRvbigpOiBhbnkge1xuXHRcdHJldHVybiB0aGlzLl9za2VsZXRvbjtcblx0fVxuXG5cdG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcblx0XHR0aGlzLnVwZGF0ZUNoaWxkcmVuKCk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgdXBkYXRlQ2hpbGRyZW4oKSB7XG5cdFx0aWYgKHRoaXMuY2hpbGRyZW4pIHtcblx0XHRcdHRoaXMuY2hpbGRyZW4udG9BcnJheSgpLmZvckVhY2goY2hpbGQgPT4gY2hpbGQuc2tlbGV0b24gPSB0aGlzLnNrZWxldG9uKTtcblx0XHR9XG5cdH1cbn1cbiJdfQ==