/**
 *
 * carbon-angular v0.0.0 | link.directive.js
 *
 * Copyright 2014, 2022 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Directive, HostBinding, Input } from "@angular/core";
/**
 * A convenience directive for applying styling to a link.
 *
 * [See demo](../../?path=/story/components-link--basic)
 *
 * Example:
 *
 * ```html
 * <a href="#" ibmLink>A link</a>
 * ```
 *
 * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/link/code) for more detail.
 *
 * <example-url>../../iframe.html?id=components-link--basic</example-url>
 */
export class Link {
    constructor() {
        this.baseClass = true;
        /**
         * Set to true to show links inline in a sentence or paragraph.
         */
        this.inline = false;
    }
    /**
     * Set to true to disable link.
     */
    set disabled(disabled) {
        this._disabled = disabled;
        this.tabindex = this.disabled ? -1 : null;
    }
    get disabled() {
        return this._disabled;
    }
}
Link.decorators = [
    { type: Directive, args: [{
                selector: "[ibmLink]"
            },] }
];
Link.propDecorators = {
    baseClass: [{ type: HostBinding, args: ["class.bx--link",] }],
    tabindex: [{ type: HostBinding, args: ["attr.tabindex",] }],
    inline: [{ type: Input }, { type: HostBinding, args: ["class.bx--link--inline",] }],
    disabled: [{ type: Input }, { type: HostBinding, args: ["attr.aria-disabled",] }, { type: HostBinding, args: ["class.bx--link--disabled",] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluay5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2xpbmsvIiwic291cmNlcyI6WyJsaW5rLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULFdBQVcsRUFDWCxLQUFLLEVBQ0wsTUFBTSxlQUFlLENBQUM7QUFFdkI7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFNSCxNQUFNLE9BQU8sSUFBSTtJQUxqQjtRQU1nQyxjQUFTLEdBQUcsSUFBSSxDQUFDO1FBT2hEOztXQUVHO1FBRW9DLFdBQU0sR0FBRyxLQUFLLENBQUM7SUFrQnZELENBQUM7SUFoQkE7O09BRUc7SUFDSCxJQUdJLFFBQVEsQ0FBQyxRQUFpQjtRQUM3QixJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztRQUMxQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDM0MsQ0FBQztJQUVELElBQUksUUFBUTtRQUNYLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN2QixDQUFDOzs7WUFoQ0QsU0FBUyxTQUFDO2dCQUNWLFFBQVEsRUFBRSxXQUFXO2FBQ3JCOzs7d0JBSUMsV0FBVyxTQUFDLGdCQUFnQjt1QkFLNUIsV0FBVyxTQUFDLGVBQWU7cUJBSzNCLEtBQUssWUFDTCxXQUFXLFNBQUMsd0JBQXdCO3VCQUtwQyxLQUFLLFlBQ0wsV0FBVyxTQUFDLG9CQUFvQixjQUNoQyxXQUFXLFNBQUMsMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0RGlyZWN0aXZlLFxuXHRIb3N0QmluZGluZyxcblx0SW5wdXRcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuLyoqXG4gKiBBIGNvbnZlbmllbmNlIGRpcmVjdGl2ZSBmb3IgYXBwbHlpbmcgc3R5bGluZyB0byBhIGxpbmsuXG4gKlxuICogW1NlZSBkZW1vXSguLi8uLi8/cGF0aD0vc3RvcnkvY29tcG9uZW50cy1saW5rLS1iYXNpYylcbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYGh0bWxcbiAqIDxhIGhyZWY9XCIjXCIgaWJtTGluaz5BIGxpbms8L2E+XG4gKiBgYGBcbiAqXG4gKiBTZWUgdGhlIFt2YW5pbGxhIGNhcmJvbiBkb2NzXShodHRwOi8vd3d3LmNhcmJvbmRlc2lnbnN5c3RlbS5jb20vY29tcG9uZW50cy9saW5rL2NvZGUpIGZvciBtb3JlIGRldGFpbC5cbiAqXG4gKiA8ZXhhbXBsZS11cmw+Li4vLi4vaWZyYW1lLmh0bWw/aWQ9Y29tcG9uZW50cy1saW5rLS1iYXNpYzwvZXhhbXBsZS11cmw+XG4gKi9cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogXCJbaWJtTGlua11cIlxufSlcblxuXG5leHBvcnQgY2xhc3MgTGluayB7XG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1saW5rXCIpIGJhc2VDbGFzcyA9IHRydWU7XG5cblx0LyoqXG5cdCAqIEF1dG9tYXRpY2FsbHkgc2V0IHRvIGAtMWAgd2hlbiBsaW5rIGlzIGRpc2FibGVkLlxuXHQgKi9cblx0QEhvc3RCaW5kaW5nKFwiYXR0ci50YWJpbmRleFwiKSB0YWJpbmRleDtcblxuXHQvKipcblx0ICogU2V0IHRvIHRydWUgdG8gc2hvdyBsaW5rcyBpbmxpbmUgaW4gYSBzZW50ZW5jZSBvciBwYXJhZ3JhcGguXG5cdCAqL1xuXHRASW5wdXQoKVxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tbGluay0taW5saW5lXCIpIGlubGluZSA9IGZhbHNlO1xuXG5cdC8qKlxuXHQgKiBTZXQgdG8gdHJ1ZSB0byBkaXNhYmxlIGxpbmsuXG5cdCAqL1xuXHRASW5wdXQoKVxuXHRASG9zdEJpbmRpbmcoXCJhdHRyLmFyaWEtZGlzYWJsZWRcIilcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLWxpbmstLWRpc2FibGVkXCIpXG5cdHNldCBkaXNhYmxlZChkaXNhYmxlZDogYm9vbGVhbikge1xuXHRcdHRoaXMuX2Rpc2FibGVkID0gZGlzYWJsZWQ7XG5cdFx0dGhpcy50YWJpbmRleCA9IHRoaXMuZGlzYWJsZWQgPyAtMSA6IG51bGw7XG5cdH1cblxuXHRnZXQgZGlzYWJsZWQoKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIHRoaXMuX2Rpc2FibGVkO1xuXHR9XG5cblx0cHJpdmF0ZSBfZGlzYWJsZWQ7XG59XG4iXX0=