/**
 *
 * carbon-angular v0.0.0 | modal-header.component.js
 *
 * Copyright 2014, 2022 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Output, EventEmitter, Input } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
import { ExperimentalService } from "carbon-components-angular/experimental";
/**
 * ***Inputs***
 * ```html
 * <ibm-modal-header>Header text</ibm-modal-header>
 * ```
 *
 * ***Outputs***
 * ```html
 * <ibm-modal-header (closeSelect)="closeModal()">Header text</ibm-modal-header>
 * ```
 */
export class ModalHeader {
    constructor(i18n, experimental) {
        this.i18n = i18n;
        this.experimental = experimental;
        /**
         * Sets the style on the modal heading based on its category.
         */
        this.theme = "default";
        /**
         * Accessible label for the header close button.
         * Defaults to the `MODAL.CLOSE` value from the i18n service.
         */
        this.closeLabel = this.i18n.get().MODAL.CLOSE;
        /**
         * Set to `false` to hide the close button.
         */
        this.showCloseButton = true;
        /**
         * To emit the event of clicking on the close icon within the modal.
         */
        this.closeSelect = new EventEmitter();
    }
    /**
     * Handles click for the close icon button within the `Modal`.
     */
    onClose() {
        this.closeSelect.emit();
    }
}
ModalHeader.decorators = [
    { type: Component, args: [{
                selector: "ibm-modal-header",
                template: `
		<header class="{{theme}} bx--modal-header">
			<ng-content></ng-content>
			<button
				*ngIf="showCloseButton"
				type="button"
				class="bx--modal-close"
				(click)="onClose()">
				<span class="bx--assistive-text">{{ closeLabel }}</span>
				<svg ibmIcon="close" size="20" class="bx--modal-close__icon"></svg>
			</button>
		</header>

	`
            }] }
];
/** @nocollapse */
ModalHeader.ctorParameters = () => [
    { type: I18n },
    { type: ExperimentalService }
];
ModalHeader.propDecorators = {
    theme: [{ type: Input }],
    closeLabel: [{ type: Input }],
    showCloseButton: [{ type: Input }],
    closeSelect: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvbW9kYWwvIiwic291cmNlcyI6WyJtb2RhbC1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixTQUFTLEVBQ1QsTUFBTSxFQUNOLFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3RELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBRTdFOzs7Ozs7Ozs7O0dBVUc7QUFrQkgsTUFBTSxPQUFPLFdBQVc7SUFvQnZCLFlBQXNCLElBQVUsRUFBWSxZQUFpQztRQUF2RCxTQUFJLEdBQUosSUFBSSxDQUFNO1FBQVksaUJBQVksR0FBWixZQUFZLENBQXFCO1FBbkI3RTs7V0FFRztRQUNNLFVBQUssR0FBRyxTQUFTLENBQUM7UUFDM0I7OztXQUdHO1FBQ00sZUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztRQUNsRDs7V0FFRztRQUNNLG9CQUFlLEdBQUcsSUFBSSxDQUFDO1FBRWhDOztXQUVHO1FBQ08sZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBRXFDLENBQUM7SUFFakY7O09BRUc7SUFDSSxPQUFPO1FBQ2IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6QixDQUFDOzs7WUE1Q0QsU0FBUyxTQUFDO2dCQUNWLFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7OztFQWFUO2FBQ0Q7Ozs7WUE5QlEsSUFBSTtZQUNKLG1CQUFtQjs7O29CQWtDMUIsS0FBSzt5QkFLTCxLQUFLOzhCQUlMLEtBQUs7MEJBS0wsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENvbXBvbmVudCxcblx0T3V0cHV0LFxuXHRFdmVudEVtaXR0ZXIsXG5cdElucHV0XG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBJMThuIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvaTE4blwiO1xuaW1wb3J0IHsgRXhwZXJpbWVudGFsU2VydmljZSB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2V4cGVyaW1lbnRhbFwiO1xuXG4vKipcbiAqICoqKklucHV0cyoqKlxuICogYGBgaHRtbFxuICogPGlibS1tb2RhbC1oZWFkZXI+SGVhZGVyIHRleHQ8L2libS1tb2RhbC1oZWFkZXI+XG4gKiBgYGBcbiAqXG4gKiAqKipPdXRwdXRzKioqXG4gKiBgYGBodG1sXG4gKiA8aWJtLW1vZGFsLWhlYWRlciAoY2xvc2VTZWxlY3QpPVwiY2xvc2VNb2RhbCgpXCI+SGVhZGVyIHRleHQ8L2libS1tb2RhbC1oZWFkZXI+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiBcImlibS1tb2RhbC1oZWFkZXJcIixcblx0dGVtcGxhdGU6IGBcblx0XHQ8aGVhZGVyIGNsYXNzPVwie3t0aGVtZX19IGJ4LS1tb2RhbC1oZWFkZXJcIj5cblx0XHRcdDxuZy1jb250ZW50PjwvbmctY29udGVudD5cblx0XHRcdDxidXR0b25cblx0XHRcdFx0Km5nSWY9XCJzaG93Q2xvc2VCdXR0b25cIlxuXHRcdFx0XHR0eXBlPVwiYnV0dG9uXCJcblx0XHRcdFx0Y2xhc3M9XCJieC0tbW9kYWwtY2xvc2VcIlxuXHRcdFx0XHQoY2xpY2spPVwib25DbG9zZSgpXCI+XG5cdFx0XHRcdDxzcGFuIGNsYXNzPVwiYngtLWFzc2lzdGl2ZS10ZXh0XCI+e3sgY2xvc2VMYWJlbCB9fTwvc3Bhbj5cblx0XHRcdFx0PHN2ZyBpYm1JY29uPVwiY2xvc2VcIiBzaXplPVwiMjBcIiBjbGFzcz1cImJ4LS1tb2RhbC1jbG9zZV9faWNvblwiPjwvc3ZnPlxuXHRcdFx0PC9idXR0b24+XG5cdFx0PC9oZWFkZXI+XG5cblx0YFxufSlcbmV4cG9ydCBjbGFzcyBNb2RhbEhlYWRlciB7XG5cdC8qKlxuXHQgKiBTZXRzIHRoZSBzdHlsZSBvbiB0aGUgbW9kYWwgaGVhZGluZyBiYXNlZCBvbiBpdHMgY2F0ZWdvcnkuXG5cdCAqL1xuXHRASW5wdXQoKSB0aGVtZSA9IFwiZGVmYXVsdFwiO1xuXHQvKipcblx0ICogQWNjZXNzaWJsZSBsYWJlbCBmb3IgdGhlIGhlYWRlciBjbG9zZSBidXR0b24uXG5cdCAqIERlZmF1bHRzIHRvIHRoZSBgTU9EQUwuQ0xPU0VgIHZhbHVlIGZyb20gdGhlIGkxOG4gc2VydmljZS5cblx0ICovXG5cdEBJbnB1dCgpIGNsb3NlTGFiZWwgPSB0aGlzLmkxOG4uZ2V0KCkuTU9EQUwuQ0xPU0U7XG5cdC8qKlxuXHQgKiBTZXQgdG8gYGZhbHNlYCB0byBoaWRlIHRoZSBjbG9zZSBidXR0b24uXG5cdCAqL1xuXHRASW5wdXQoKSBzaG93Q2xvc2VCdXR0b24gPSB0cnVlO1xuXG5cdC8qKlxuXHQgKiBUbyBlbWl0IHRoZSBldmVudCBvZiBjbGlja2luZyBvbiB0aGUgY2xvc2UgaWNvbiB3aXRoaW4gdGhlIG1vZGFsLlxuXHQgKi9cblx0QE91dHB1dCgpIGNsb3NlU2VsZWN0ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG5cdGNvbnN0cnVjdG9yKHByb3RlY3RlZCBpMThuOiBJMThuLCBwcm90ZWN0ZWQgZXhwZXJpbWVudGFsOiBFeHBlcmltZW50YWxTZXJ2aWNlKSB7fVxuXG5cdC8qKlxuXHQgKiBIYW5kbGVzIGNsaWNrIGZvciB0aGUgY2xvc2UgaWNvbiBidXR0b24gd2l0aGluIHRoZSBgTW9kYWxgLlxuXHQgKi9cblx0cHVibGljIG9uQ2xvc2UoKSB7XG5cdFx0dGhpcy5jbG9zZVNlbGVjdC5lbWl0KCk7XG5cdH1cbn1cbiJdfQ==