/**
 *
 * carbon-angular v0.0.0 | timepicker-select.component.js
 *
 * Copyright 2014, 2022 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, HostBinding } from "@angular/core";
import { Select } from "carbon-components-angular/select";
import { NG_VALUE_ACCESSOR } from "@angular/forms";
/**
 * [See demo](../../?path=/story/components-time-picker-select--simple)
 *
 * <example-url>../../iframe.html?id=components-time-picker-select--simple</example-url>
 */
export class TimePickerSelect extends Select {
    constructor() {
        super(...arguments);
        this.timeSelect = true;
        this.timePickerSelect = true;
        this.id = `timepicker-select-${TimePickerSelect.selectCount++}`;
        /**
         * Set to true for a loading select.
         */
        this.skeleton = false;
        /**
         * `light` or `dark` select theme
         */
        this.theme = "dark";
        this.timePickerSelectSkeleton = this.skeleton;
    }
    get timePickerSelectLight() {
        return this.theme === "light";
    }
}
TimePickerSelect.decorators = [
    { type: Component, args: [{
                selector: "ibm-timepicker-select",
                template: `
		<label *ngIf="!skeleton && label" [attr.for]="id" class="bx--label bx--visually-hidden">{{label}}</label>
		<div class="bx--select-input__wrapper">
			<select
				#select
				[attr.id]="id"
				[disabled]="disabled"
				(change)="onChange($event)"
				class="bx--select-input">
				<ng-content></ng-content>
			</select>
			<svg ibmIcon="chevron--down" size="16" *ngIf="!skeleton" class="bx--select__arrow"></svg>
		</div>
	`,
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: TimePickerSelect,
                        multi: true
                    }
                ]
            }] }
];
TimePickerSelect.propDecorators = {
    timeSelect: [{ type: HostBinding, args: ["class.bx--select",] }],
    timePickerSelect: [{ type: HostBinding, args: ["class.bx--time-picker__select",] }],
    id: [{ type: Input }],
    skeleton: [{ type: Input }],
    theme: [{ type: Input }],
    label: [{ type: Input }],
    timePickerSelectSkeleton: [{ type: HostBinding, args: ["class.bx--skeleton",] }],
    timePickerSelectLight: [{ type: HostBinding, args: ["class.bx--select--light",] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXBpY2tlci1zZWxlY3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci90aW1lcGlja2VyLXNlbGVjdC8iLCJzb3VyY2VzIjpbInRpbWVwaWNrZXItc2VsZWN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFHTCxXQUFXLEVBRVgsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQzFELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRW5EOzs7O0dBSUc7QUF5QkgsTUFBTSxPQUFPLGdCQUFpQixTQUFRLE1BQU07SUF4QjVDOztRQXlCa0MsZUFBVSxHQUFHLElBQUksQ0FBQztRQUNMLHFCQUFnQixHQUFHLElBQUksQ0FBQztRQUU3RCxPQUFFLEdBQUcscUJBQXFCLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUM7UUFFcEU7O1dBRUc7UUFDTSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRTFCOztXQUVHO1FBQ00sVUFBSyxHQUFxQixNQUFNLENBQUM7UUFJUCw2QkFBd0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBSzdFLENBQUM7SUFIQSxJQUE0QyxxQkFBcUI7UUFDaEUsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLE9BQU8sQ0FBQztJQUMvQixDQUFDOzs7WUE5Q0QsU0FBUyxTQUFDO2dCQUNWLFFBQVEsRUFBRSx1QkFBdUI7Z0JBQ2pDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7OztFQWFUO2dCQUNELFNBQVMsRUFBRTtvQkFDVjt3QkFDQyxPQUFPLEVBQUUsaUJBQWlCO3dCQUMxQixXQUFXLEVBQUUsZ0JBQWdCO3dCQUM3QixLQUFLLEVBQUUsSUFBSTtxQkFDWDtpQkFDRDthQUNEOzs7eUJBRUMsV0FBVyxTQUFDLGtCQUFrQjsrQkFDOUIsV0FBVyxTQUFDLCtCQUErQjtpQkFFM0MsS0FBSzt1QkFLTCxLQUFLO29CQUtMLEtBQUs7b0JBRUwsS0FBSzt1Q0FFTCxXQUFXLFNBQUMsb0JBQW9CO29DQUVoQyxXQUFXLFNBQUMseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRJbnB1dCxcblx0T3V0cHV0LFxuXHRFdmVudEVtaXR0ZXIsXG5cdEhvc3RCaW5kaW5nLFxuXHRUZW1wbGF0ZVJlZlxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgU2VsZWN0IH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvc2VsZWN0XCI7XG5pbXBvcnQgeyBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuXG4vKipcbiAqIFtTZWUgZGVtb10oLi4vLi4vP3BhdGg9L3N0b3J5L2NvbXBvbmVudHMtdGltZS1waWNrZXItc2VsZWN0LS1zaW1wbGUpXG4gKlxuICogPGV4YW1wbGUtdXJsPi4uLy4uL2lmcmFtZS5odG1sP2lkPWNvbXBvbmVudHMtdGltZS1waWNrZXItc2VsZWN0LS1zaW1wbGU8L2V4YW1wbGUtdXJsPlxuICovXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6IFwiaWJtLXRpbWVwaWNrZXItc2VsZWN0XCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PGxhYmVsICpuZ0lmPVwiIXNrZWxldG9uICYmIGxhYmVsXCIgW2F0dHIuZm9yXT1cImlkXCIgY2xhc3M9XCJieC0tbGFiZWwgYngtLXZpc3VhbGx5LWhpZGRlblwiPnt7bGFiZWx9fTwvbGFiZWw+XG5cdFx0PGRpdiBjbGFzcz1cImJ4LS1zZWxlY3QtaW5wdXRfX3dyYXBwZXJcIj5cblx0XHRcdDxzZWxlY3Rcblx0XHRcdFx0I3NlbGVjdFxuXHRcdFx0XHRbYXR0ci5pZF09XCJpZFwiXG5cdFx0XHRcdFtkaXNhYmxlZF09XCJkaXNhYmxlZFwiXG5cdFx0XHRcdChjaGFuZ2UpPVwib25DaGFuZ2UoJGV2ZW50KVwiXG5cdFx0XHRcdGNsYXNzPVwiYngtLXNlbGVjdC1pbnB1dFwiPlxuXHRcdFx0XHQ8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG5cdFx0XHQ8L3NlbGVjdD5cblx0XHRcdDxzdmcgaWJtSWNvbj1cImNoZXZyb24tLWRvd25cIiBzaXplPVwiMTZcIiAqbmdJZj1cIiFza2VsZXRvblwiIGNsYXNzPVwiYngtLXNlbGVjdF9fYXJyb3dcIj48L3N2Zz5cblx0XHQ8L2Rpdj5cblx0YCxcblx0cHJvdmlkZXJzOiBbXG5cdFx0e1xuXHRcdFx0cHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG5cdFx0XHR1c2VFeGlzdGluZzogVGltZVBpY2tlclNlbGVjdCxcblx0XHRcdG11bHRpOiB0cnVlXG5cdFx0fVxuXHRdXG59KVxuZXhwb3J0IGNsYXNzIFRpbWVQaWNrZXJTZWxlY3QgZXh0ZW5kcyBTZWxlY3Qge1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tc2VsZWN0XCIpIHRpbWVTZWxlY3QgPSB0cnVlO1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tdGltZS1waWNrZXJfX3NlbGVjdFwiKSB0aW1lUGlja2VyU2VsZWN0ID0gdHJ1ZTtcblxuXHRASW5wdXQoKSBpZCA9IGB0aW1lcGlja2VyLXNlbGVjdC0ke1RpbWVQaWNrZXJTZWxlY3Quc2VsZWN0Q291bnQrK31gO1xuXG5cdC8qKlxuXHQgKiBTZXQgdG8gdHJ1ZSBmb3IgYSBsb2FkaW5nIHNlbGVjdC5cblx0ICovXG5cdEBJbnB1dCgpIHNrZWxldG9uID0gZmFsc2U7XG5cblx0LyoqXG5cdCAqIGBsaWdodGAgb3IgYGRhcmtgIHNlbGVjdCB0aGVtZVxuXHQgKi9cblx0QElucHV0KCkgdGhlbWU6IFwibGlnaHRcIiB8IFwiZGFya1wiID0gXCJkYXJrXCI7XG5cblx0QElucHV0KCkgbGFiZWw6IHN0cmluZztcblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tc2tlbGV0b25cIikgdGltZVBpY2tlclNlbGVjdFNrZWxldG9uID0gdGhpcy5za2VsZXRvbjtcblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tc2VsZWN0LS1saWdodFwiKSBnZXQgdGltZVBpY2tlclNlbGVjdExpZ2h0KCkge1xuXHRcdHJldHVybiB0aGlzLnRoZW1lID09PSBcImxpZ2h0XCI7XG5cdH1cbn1cbiJdfQ==