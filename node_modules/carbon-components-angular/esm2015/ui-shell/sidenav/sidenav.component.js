/**
 *
 * carbon-angular v0.0.0 | sidenav.component.js
 *
 * Copyright 2014, 2022 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, HostBinding, Input, ViewEncapsulation } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
/**
 * `Sidenav` is a fixed left navigation that may contain `SideNavItem`s or `SideNavMenu`s
 *
 * [See demo](../../?path=/story/components-ui-shell--side-navigation)
 *
 * <example-url>../../iframe.html?id=components-ui-shell--side-navigation</example-url>
 */
export class SideNav {
    constructor(i18n) {
        this.i18n = i18n;
        this.role = "complementary";
        this.hostClass = true;
        this.ariaLabel = "Side navigation";
        /**
         * Controls the expanded (`true`) or collapsed (`false`) state when on a small screen.
         */
        this.expanded = true;
        /**
         * Controls the hidden (`true`) or visible (`false`) state
         */
        this.hidden = false;
        this.rail = false;
        this.ux = true;
        this.allowExpansion = false;
    }
    toggle() {
        this.expanded = !this.expanded;
    }
}
SideNav.decorators = [
    { type: Component, args: [{
                selector: "ibm-sidenav",
                template: `
		<nav class="bx--side-nav__navigation" role="navigation" [attr.aria-label]="ariaLabel">
			<ng-content select="ibm-sidenav-header"></ng-content>
			<ul class="bx--side-nav__items">
				<div
					class="bx--side-nav__header-navigation bx--side-nav__header-divider">
					<ng-container *ngFor="let navigationItem of navigationItems">
						<ibm-sidenav-item
							*ngIf="navigationItem.type === 'item'"
							[href]="navigationItem.href"
							[route]="navigationItem.route"
							[routeExtras]="navigationItem.routeExtras"
							[title]="navigationItem.title">
							{{ navigationItem.content }}
						</ibm-sidenav-item>
						<ibm-sidenav-menu
							*ngIf="navigationItem.type === 'menu'"
							[title]="navigationItem.title"
							[menuItems]="navigationItem.menuItems">
						</ibm-sidenav-menu>
					</ng-container>
				</div>
				<ng-content></ng-content>
			</ul>
			<footer class="bx--side-nav__footer">
				<button
					*ngIf="allowExpansion"
					class="bx--side-nav__toggle"
					type="button"
					[title]="(expanded ? i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_CLOSE') : i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_OPEN')) | async"
					(click)="toggle()">
					<div class="bx--side-nav__icon">
						<svg
							*ngIf="expanded"
							focusable="false"
							preserveAspectRatio="xMidYMid meet"
							style="will-change: transform;"
							xmlns="http://www.w3.org/2000/svg"
							width="20"
							height="20"
							viewBox="0 0 32 32"
							aria-hidden="true">
							<path d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4l6.6 6.6L8 22.6 9.4 24l6.6-6.6 6.6 6.6 1.4-1.4-6.6-6.6L24 9.4z"></path>
						</svg>
						<svg
							*ngIf="!expanded"
							focusable="false"
							preserveAspectRatio="xMidYMid meet"
							style="will-change: transform;"
							xmlns="http://www.w3.org/2000/svg"
							width="20"
							height="20"
							viewBox="0 0 32 32"
							aria-hidden="true">
							<path d="M22 16L12 26l-1.4-1.4 8.6-8.6-8.6-8.6L12 6z"></path>
						</svg>
					</div>
					<span class="bx--assistive-text">
						{{(expanded ? i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_CLOSE') : i18n.get('UI_SHELL.SIDE_NAV.TOGGLE_OPEN')) | async}}
					</span>
				</button>
			</footer>
		</nav>
	`,
                encapsulation: ViewEncapsulation.None
            }] }
];
/** @nocollapse */
SideNav.ctorParameters = () => [
    { type: I18n }
];
SideNav.propDecorators = {
    role: [{ type: HostBinding, args: ["attr.role",] }],
    hostClass: [{ type: HostBinding, args: ["class.bx--side-nav",] }],
    ariaLabel: [{ type: HostBinding, args: ["attr.aria-label",] }, { type: Input }],
    expanded: [{ type: HostBinding, args: ["class.bx--side-nav--expanded",] }, { type: Input }],
    hidden: [{ type: HostBinding, args: ["class.bx--side-nav--hidden",] }, { type: Input }],
    rail: [{ type: HostBinding, args: ["class.bx--side-nav--rail",] }, { type: Input }],
    ux: [{ type: HostBinding, args: ["class.bx--side-nav--ux",] }],
    allowExpansion: [{ type: Input }],
    navigationItems: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZW5hdi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL3VpLXNoZWxsLyIsInNvdXJjZXMiOlsic2lkZW5hdi9zaWRlbmF2LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULFdBQVcsRUFDWCxLQUFLLEVBQ0wsaUJBQWlCLEVBQ2pCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUd0RDs7Ozs7O0dBTUc7QUFxRUgsTUFBTSxPQUFPLE9BQU87SUF1Qm5CLFlBQW1CLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBdEJILFNBQUksR0FBRyxlQUFlLENBQUM7UUFDZCxjQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ1gsY0FBUyxHQUFHLGlCQUFpQixDQUFDO1FBQ3ZFOztXQUVHO1FBQ21ELGFBQVEsR0FBRyxJQUFJLENBQUM7UUFDdEU7O1dBRUc7UUFDaUQsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUNqQixTQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLE9BQUUsR0FBRyxJQUFJLENBQUM7UUFDeEMsbUJBQWMsR0FBRyxLQUFLLENBQUM7SUFTQyxDQUFDO0lBRWxDLE1BQU07UUFDTCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUNoQyxDQUFDOzs7WUEvRkQsU0FBUyxTQUFDO2dCQUNWLFFBQVEsRUFBRSxhQUFhO2dCQUN2QixRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQStEVDtnQkFDRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTthQUNyQzs7OztZQTdFUSxJQUFJOzs7bUJBK0VYLFdBQVcsU0FBQyxXQUFXO3dCQUN2QixXQUFXLFNBQUMsb0JBQW9CO3dCQUNoQyxXQUFXLFNBQUMsaUJBQWlCLGNBQUcsS0FBSzt1QkFJckMsV0FBVyxTQUFDLDhCQUE4QixjQUFHLEtBQUs7cUJBSWxELFdBQVcsU0FBQyw0QkFBNEIsY0FBRyxLQUFLO21CQUNoRCxXQUFXLFNBQUMsMEJBQTBCLGNBQUcsS0FBSztpQkFDOUMsV0FBVyxTQUFDLHdCQUF3Qjs2QkFDcEMsS0FBSzs4QkFPTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q29tcG9uZW50LFxuXHRIb3N0QmluZGluZyxcblx0SW5wdXQsXG5cdFZpZXdFbmNhcHN1bGF0aW9uXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBJMThuIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvaTE4blwiO1xuaW1wb3J0IHsgTmF2aWdhdGlvbkl0ZW0gfSBmcm9tIFwiLi4vaGVhZGVyL2hlYWRlci1uYXZpZ2F0aW9uLWl0ZW1zLmludGVyZmFjZVwiO1xuXG4vKipcbiAqIGBTaWRlbmF2YCBpcyBhIGZpeGVkIGxlZnQgbmF2aWdhdGlvbiB0aGF0IG1heSBjb250YWluIGBTaWRlTmF2SXRlbWBzIG9yIGBTaWRlTmF2TWVudWBzXG4gKlxuICogW1NlZSBkZW1vXSguLi8uLi8/cGF0aD0vc3RvcnkvY29tcG9uZW50cy11aS1zaGVsbC0tc2lkZS1uYXZpZ2F0aW9uKVxuICpcbiAqIDxleGFtcGxlLXVybD4uLi8uLi9pZnJhbWUuaHRtbD9pZD1jb21wb25lbnRzLXVpLXNoZWxsLS1zaWRlLW5hdmlnYXRpb248L2V4YW1wbGUtdXJsPlxuICovXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6IFwiaWJtLXNpZGVuYXZcIixcblx0dGVtcGxhdGU6IGBcblx0XHQ8bmF2IGNsYXNzPVwiYngtLXNpZGUtbmF2X19uYXZpZ2F0aW9uXCIgcm9sZT1cIm5hdmlnYXRpb25cIiBbYXR0ci5hcmlhLWxhYmVsXT1cImFyaWFMYWJlbFwiPlxuXHRcdFx0PG5nLWNvbnRlbnQgc2VsZWN0PVwiaWJtLXNpZGVuYXYtaGVhZGVyXCI+PC9uZy1jb250ZW50PlxuXHRcdFx0PHVsIGNsYXNzPVwiYngtLXNpZGUtbmF2X19pdGVtc1wiPlxuXHRcdFx0XHQ8ZGl2XG5cdFx0XHRcdFx0Y2xhc3M9XCJieC0tc2lkZS1uYXZfX2hlYWRlci1uYXZpZ2F0aW9uIGJ4LS1zaWRlLW5hdl9faGVhZGVyLWRpdmlkZXJcIj5cblx0XHRcdFx0XHQ8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBuYXZpZ2F0aW9uSXRlbSBvZiBuYXZpZ2F0aW9uSXRlbXNcIj5cblx0XHRcdFx0XHRcdDxpYm0tc2lkZW5hdi1pdGVtXG5cdFx0XHRcdFx0XHRcdCpuZ0lmPVwibmF2aWdhdGlvbkl0ZW0udHlwZSA9PT0gJ2l0ZW0nXCJcblx0XHRcdFx0XHRcdFx0W2hyZWZdPVwibmF2aWdhdGlvbkl0ZW0uaHJlZlwiXG5cdFx0XHRcdFx0XHRcdFtyb3V0ZV09XCJuYXZpZ2F0aW9uSXRlbS5yb3V0ZVwiXG5cdFx0XHRcdFx0XHRcdFtyb3V0ZUV4dHJhc109XCJuYXZpZ2F0aW9uSXRlbS5yb3V0ZUV4dHJhc1wiXG5cdFx0XHRcdFx0XHRcdFt0aXRsZV09XCJuYXZpZ2F0aW9uSXRlbS50aXRsZVwiPlxuXHRcdFx0XHRcdFx0XHR7eyBuYXZpZ2F0aW9uSXRlbS5jb250ZW50IH19XG5cdFx0XHRcdFx0XHQ8L2libS1zaWRlbmF2LWl0ZW0+XG5cdFx0XHRcdFx0XHQ8aWJtLXNpZGVuYXYtbWVudVxuXHRcdFx0XHRcdFx0XHQqbmdJZj1cIm5hdmlnYXRpb25JdGVtLnR5cGUgPT09ICdtZW51J1wiXG5cdFx0XHRcdFx0XHRcdFt0aXRsZV09XCJuYXZpZ2F0aW9uSXRlbS50aXRsZVwiXG5cdFx0XHRcdFx0XHRcdFttZW51SXRlbXNdPVwibmF2aWdhdGlvbkl0ZW0ubWVudUl0ZW1zXCI+XG5cdFx0XHRcdFx0XHQ8L2libS1zaWRlbmF2LW1lbnU+XG5cdFx0XHRcdFx0PC9uZy1jb250YWluZXI+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQ8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG5cdFx0XHQ8L3VsPlxuXHRcdFx0PGZvb3RlciBjbGFzcz1cImJ4LS1zaWRlLW5hdl9fZm9vdGVyXCI+XG5cdFx0XHRcdDxidXR0b25cblx0XHRcdFx0XHQqbmdJZj1cImFsbG93RXhwYW5zaW9uXCJcblx0XHRcdFx0XHRjbGFzcz1cImJ4LS1zaWRlLW5hdl9fdG9nZ2xlXCJcblx0XHRcdFx0XHR0eXBlPVwiYnV0dG9uXCJcblx0XHRcdFx0XHRbdGl0bGVdPVwiKGV4cGFuZGVkID8gaTE4bi5nZXQoJ1VJX1NIRUxMLlNJREVfTkFWLlRPR0dMRV9DTE9TRScpIDogaTE4bi5nZXQoJ1VJX1NIRUxMLlNJREVfTkFWLlRPR0dMRV9PUEVOJykpIHwgYXN5bmNcIlxuXHRcdFx0XHRcdChjbGljayk9XCJ0b2dnbGUoKVwiPlxuXHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJieC0tc2lkZS1uYXZfX2ljb25cIj5cblx0XHRcdFx0XHRcdDxzdmdcblx0XHRcdFx0XHRcdFx0Km5nSWY9XCJleHBhbmRlZFwiXG5cdFx0XHRcdFx0XHRcdGZvY3VzYWJsZT1cImZhbHNlXCJcblx0XHRcdFx0XHRcdFx0cHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIlxuXHRcdFx0XHRcdFx0XHRzdHlsZT1cIndpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XCJcblx0XHRcdFx0XHRcdFx0eG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG5cdFx0XHRcdFx0XHRcdHdpZHRoPVwiMjBcIlxuXHRcdFx0XHRcdFx0XHRoZWlnaHQ9XCIyMFwiXG5cdFx0XHRcdFx0XHRcdHZpZXdCb3g9XCIwIDAgMzIgMzJcIlxuXHRcdFx0XHRcdFx0XHRhcmlhLWhpZGRlbj1cInRydWVcIj5cblx0XHRcdFx0XHRcdFx0PHBhdGggZD1cIk0yNCA5LjRMMjIuNiA4IDE2IDE0LjYgOS40IDggOCA5LjRsNi42IDYuNkw4IDIyLjYgOS40IDI0bDYuNi02LjYgNi42IDYuNiAxLjQtMS40LTYuNi02LjZMMjQgOS40elwiPjwvcGF0aD5cblx0XHRcdFx0XHRcdDwvc3ZnPlxuXHRcdFx0XHRcdFx0PHN2Z1xuXHRcdFx0XHRcdFx0XHQqbmdJZj1cIiFleHBhbmRlZFwiXG5cdFx0XHRcdFx0XHRcdGZvY3VzYWJsZT1cImZhbHNlXCJcblx0XHRcdFx0XHRcdFx0cHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIlxuXHRcdFx0XHRcdFx0XHRzdHlsZT1cIndpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XCJcblx0XHRcdFx0XHRcdFx0eG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG5cdFx0XHRcdFx0XHRcdHdpZHRoPVwiMjBcIlxuXHRcdFx0XHRcdFx0XHRoZWlnaHQ9XCIyMFwiXG5cdFx0XHRcdFx0XHRcdHZpZXdCb3g9XCIwIDAgMzIgMzJcIlxuXHRcdFx0XHRcdFx0XHRhcmlhLWhpZGRlbj1cInRydWVcIj5cblx0XHRcdFx0XHRcdFx0PHBhdGggZD1cIk0yMiAxNkwxMiAyNmwtMS40LTEuNCA4LjYtOC42LTguNi04LjZMMTIgNnpcIj48L3BhdGg+XG5cdFx0XHRcdFx0XHQ8L3N2Zz5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHQ8c3BhbiBjbGFzcz1cImJ4LS1hc3Npc3RpdmUtdGV4dFwiPlxuXHRcdFx0XHRcdFx0e3soZXhwYW5kZWQgPyBpMThuLmdldCgnVUlfU0hFTEwuU0lERV9OQVYuVE9HR0xFX0NMT1NFJykgOiBpMThuLmdldCgnVUlfU0hFTEwuU0lERV9OQVYuVE9HR0xFX09QRU4nKSkgfCBhc3luY319XG5cdFx0XHRcdFx0PC9zcGFuPlxuXHRcdFx0XHQ8L2J1dHRvbj5cblx0XHRcdDwvZm9vdGVyPlxuXHRcdDwvbmF2PlxuXHRgLFxuXHRlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFNpZGVOYXYge1xuXHRASG9zdEJpbmRpbmcoXCJhdHRyLnJvbGVcIikgcm9sZSA9IFwiY29tcGxlbWVudGFyeVwiO1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tc2lkZS1uYXZcIikgaG9zdENsYXNzID0gdHJ1ZTtcblx0QEhvc3RCaW5kaW5nKFwiYXR0ci5hcmlhLWxhYmVsXCIpIEBJbnB1dCgpIGFyaWFMYWJlbCA9IFwiU2lkZSBuYXZpZ2F0aW9uXCI7XG5cdC8qKlxuXHQgKiBDb250cm9scyB0aGUgZXhwYW5kZWQgKGB0cnVlYCkgb3IgY29sbGFwc2VkIChgZmFsc2VgKSBzdGF0ZSB3aGVuIG9uIGEgc21hbGwgc2NyZWVuLlxuXHQgKi9cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXNpZGUtbmF2LS1leHBhbmRlZFwiKSBASW5wdXQoKSBleHBhbmRlZCA9IHRydWU7XG5cdC8qKlxuXHQgKiBDb250cm9scyB0aGUgaGlkZGVuIChgdHJ1ZWApIG9yIHZpc2libGUgKGBmYWxzZWApIHN0YXRlXG5cdCAqL1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tc2lkZS1uYXYtLWhpZGRlblwiKSBASW5wdXQoKSBoaWRkZW4gPSBmYWxzZTtcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXNpZGUtbmF2LS1yYWlsXCIpIEBJbnB1dCgpIHJhaWwgPSBmYWxzZTtcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLXNpZGUtbmF2LS11eFwiKSB1eCA9IHRydWU7XG5cdEBJbnB1dCgpIGFsbG93RXhwYW5zaW9uID0gZmFsc2U7XG5cblx0LyoqXG5cdCAqIE5hdmlnYXRpb25JdGVtcyBmcm9tIHRoZSBoZWFkZXIgbmF2aWdhdGlvbiBjb21wb25lbnQgd2hpY2ggYXJlIGRpc3BsYXllZCBvbiB0aGUgc2lkZW5hdiB3aGVuIHRoZSB3aW5kb3dcblx0ICogaW5uZXJXaWR0aCBpcyBzbWFsbCBlbm91Z2guIFNpZGVuYXYgaXRlbXMgYW5kIG1lbnVzIGFyZSBjcmVhdGVkIHVzaW5nIHRoZSBtb2RlbCB1c2VkIHRvIGNyZWF0ZSBoZWFkZXJcblx0ICogbmF2aWdhdGlvbiBpdGVtcy5cblx0ICovXG5cdEBJbnB1dCgpIG5hdmlnYXRpb25JdGVtczogTmF2aWdhdGlvbkl0ZW1bXTtcblxuXHRjb25zdHJ1Y3RvcihwdWJsaWMgaTE4bjogSTE4bikgeyB9XG5cblx0dG9nZ2xlKCkge1xuXHRcdHRoaXMuZXhwYW5kZWQgPSAhdGhpcy5leHBhbmRlZDtcblx0fVxufVxuIl19