/**
 *
 * carbon-angular v0.0.0 | file.component.js
 *
 * Copyright 2014, 2022 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, Output, EventEmitter, HostBinding } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
var FileComponent = /** @class */ (function () {
    function FileComponent(i18n) {
        this.i18n = i18n;
        /**
         * Accessible translations for the close and complete icons
         */
        this.translations = this.i18n.get().FILE_UPLOADER;
        this.remove = new EventEmitter();
        this.selectedFile = true;
    }
    Object.defineProperty(FileComponent.prototype, "isInvalidText", {
        get: function () {
            return this.fileItem.invalidText;
        },
        enumerable: true,
        configurable: true
    });
    FileComponent.prototype.ngOnDestroy = function () {
        this.remove.emit();
    };
    FileComponent.decorators = [
        { type: Component, args: [{
                    selector: "ibm-file",
                    template: "\n\t\t<p class=\"bx--file-filename\">{{fileItem.file.name}}</p>\n\t\t<span\n\t\t\t*ngIf=\"fileItem.state === 'edit'\"\n\t\t\tclass=\"bx--file__state-container\"\n\t\t\t(click)=\"remove.emit()\"\n\t\t\t(keyup.enter)=\"remove.emit()\"\n\t\t\t(keyup.space)=\"remove.emit()\">\n\t\t\t<svg\n\t\t\t\t*ngIf=\"isInvalidText\"\n\t\t\t\tibmIcon=\"warning--filled\"\n\t\t\t\tclass=\"bx--file--invalid\"\n\t\t\t\tsize=\"16\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t</svg>\n\t\t\t<svg\n\t\t\t\tibmIcon=\"close\"\n\t\t\t\tsize=\"16\"\n\t\t\t\tclass=\"bx--file-close\"\n\t\t\t\t[ariaLabel]=\"translations.REMOVE_BUTTON\"\n\t\t\t\ttabindex=\"0\">\n\t\t\t</svg>\n\t\t</span>\n\t\t<span *ngIf=\"fileItem.state === 'upload'\">\n\t\t\t<div class=\"bx--inline-loading__animation\">\n\t\t\t\t<ibm-loading size=\"sm\"></ibm-loading>\n\t\t\t</div>\n\t\t</span>\n\t\t<span\n\t\t\t*ngIf=\"fileItem.state === 'complete'\"\n\t\t\tclass=\"bx--file__state-container\"\n\t\t\ttabindex=\"0\">\n\n\t\t\t<svg\n\t\t\t\tibmIcon=\"checkmark--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\tclass=\"bx--file-complete\"\n\t\t\t\t[ariaLabel]=\"translations.CHECKMARK\">\n\t\t\t</svg>\n\t\t</span>\n\t"
                }] }
    ];
    /** @nocollapse */
    FileComponent.ctorParameters = function () { return [
        { type: I18n }
    ]; };
    FileComponent.propDecorators = {
        translations: [{ type: Input }],
        fileItem: [{ type: Input }],
        remove: [{ type: Output }],
        selectedFile: [{ type: HostBinding, args: ["class.bx--file__selected-file",] }],
        isInvalidText: [{ type: HostBinding, args: ["class.bx--file__selected-file--invalid",] }]
    };
    return FileComponent;
}());
export { FileComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2ZpbGUtdXBsb2FkZXIvIiwic291cmNlcyI6WyJmaWxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULEtBQUssRUFDTCxNQUFNLEVBQ04sWUFBWSxFQUNaLFdBQVcsRUFFWCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFHdEQ7SUE4REMsdUJBQXNCLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBakJoQzs7V0FFRztRQUNNLGlCQUFZLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxhQUFhLENBQUM7UUFNNUMsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFUSxpQkFBWSxHQUFHLElBQUksQ0FBQztJQU0vQixDQUFDO0lBSnBDLHNCQUEyRCx3Q0FBYTthQUF4RTtZQUNDLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUM7UUFDbEMsQ0FBQzs7O09BQUE7SUFJRCxtQ0FBVyxHQUFYO1FBQ0MsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNwQixDQUFDOztnQkFsRUQsU0FBUyxTQUFDO29CQUNWLFFBQVEsRUFBRSxVQUFVO29CQUNwQixRQUFRLEVBQUUseW5DQXdDVDtpQkFDRDs7OztnQkE5Q1EsSUFBSTs7OytCQW1EWCxLQUFLOzJCQUlMLEtBQUs7eUJBRUwsTUFBTTsrQkFFTixXQUFXLFNBQUMsK0JBQStCO2dDQUUzQyxXQUFXLFNBQUMsd0NBQXdDOztJQVN0RCxvQkFBQztDQUFBLEFBbkVELElBbUVDO1NBdkJZLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdElucHV0LFxuXHRPdXRwdXQsXG5cdEV2ZW50RW1pdHRlcixcblx0SG9zdEJpbmRpbmcsXG5cdE9uRGVzdHJveVxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG5pbXBvcnQgeyBJMThuIH0gZnJvbSBcImNhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvaTE4blwiO1xuaW1wb3J0IHsgRmlsZUl0ZW0gfSBmcm9tIFwiLi9maWxlLWl0ZW0uaW50ZXJmYWNlXCI7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tZmlsZVwiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxwIGNsYXNzPVwiYngtLWZpbGUtZmlsZW5hbWVcIj57e2ZpbGVJdGVtLmZpbGUubmFtZX19PC9wPlxuXHRcdDxzcGFuXG5cdFx0XHQqbmdJZj1cImZpbGVJdGVtLnN0YXRlID09PSAnZWRpdCdcIlxuXHRcdFx0Y2xhc3M9XCJieC0tZmlsZV9fc3RhdGUtY29udGFpbmVyXCJcblx0XHRcdChjbGljayk9XCJyZW1vdmUuZW1pdCgpXCJcblx0XHRcdChrZXl1cC5lbnRlcik9XCJyZW1vdmUuZW1pdCgpXCJcblx0XHRcdChrZXl1cC5zcGFjZSk9XCJyZW1vdmUuZW1pdCgpXCI+XG5cdFx0XHQ8c3ZnXG5cdFx0XHRcdCpuZ0lmPVwiaXNJbnZhbGlkVGV4dFwiXG5cdFx0XHRcdGlibUljb249XCJ3YXJuaW5nLS1maWxsZWRcIlxuXHRcdFx0XHRjbGFzcz1cImJ4LS1maWxlLS1pbnZhbGlkXCJcblx0XHRcdFx0c2l6ZT1cIjE2XCJcblx0XHRcdFx0dGFiaW5kZXg9XCIwXCI+XG5cdFx0XHQ8L3N2Zz5cblx0XHRcdDxzdmdcblx0XHRcdFx0aWJtSWNvbj1cImNsb3NlXCJcblx0XHRcdFx0c2l6ZT1cIjE2XCJcblx0XHRcdFx0Y2xhc3M9XCJieC0tZmlsZS1jbG9zZVwiXG5cdFx0XHRcdFthcmlhTGFiZWxdPVwidHJhbnNsYXRpb25zLlJFTU9WRV9CVVRUT05cIlxuXHRcdFx0XHR0YWJpbmRleD1cIjBcIj5cblx0XHRcdDwvc3ZnPlxuXHRcdDwvc3Bhbj5cblx0XHQ8c3BhbiAqbmdJZj1cImZpbGVJdGVtLnN0YXRlID09PSAndXBsb2FkJ1wiPlxuXHRcdFx0PGRpdiBjbGFzcz1cImJ4LS1pbmxpbmUtbG9hZGluZ19fYW5pbWF0aW9uXCI+XG5cdFx0XHRcdDxpYm0tbG9hZGluZyBzaXplPVwic21cIj48L2libS1sb2FkaW5nPlxuXHRcdFx0PC9kaXY+XG5cdFx0PC9zcGFuPlxuXHRcdDxzcGFuXG5cdFx0XHQqbmdJZj1cImZpbGVJdGVtLnN0YXRlID09PSAnY29tcGxldGUnXCJcblx0XHRcdGNsYXNzPVwiYngtLWZpbGVfX3N0YXRlLWNvbnRhaW5lclwiXG5cdFx0XHR0YWJpbmRleD1cIjBcIj5cblxuXHRcdFx0PHN2Z1xuXHRcdFx0XHRpYm1JY29uPVwiY2hlY2ttYXJrLS1maWxsZWRcIlxuXHRcdFx0XHRzaXplPVwiMTZcIlxuXHRcdFx0XHRjbGFzcz1cImJ4LS1maWxlLWNvbXBsZXRlXCJcblx0XHRcdFx0W2FyaWFMYWJlbF09XCJ0cmFuc2xhdGlvbnMuQ0hFQ0tNQVJLXCI+XG5cdFx0XHQ8L3N2Zz5cblx0XHQ8L3NwYW4+XG5cdGBcbn0pXG5leHBvcnQgY2xhc3MgRmlsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG5cdC8qKlxuXHQgKiBBY2Nlc3NpYmxlIHRyYW5zbGF0aW9ucyBmb3IgdGhlIGNsb3NlIGFuZCBjb21wbGV0ZSBpY29uc1xuXHQgKi9cblx0QElucHV0KCkgdHJhbnNsYXRpb25zID0gdGhpcy5pMThuLmdldCgpLkZJTEVfVVBMT0FERVI7XG5cdC8qKlxuXHQgKiBBIHNpbmdsZSBgRmlsZUl0ZW1gIGZyb20gdGhlIHNldCBvZiBgRmlsZUl0ZW1gc1xuXHQgKi9cblx0QElucHV0KCkgZmlsZUl0ZW06IEZpbGVJdGVtO1xuXG5cdEBPdXRwdXQoKSByZW1vdmUgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLWZpbGVfX3NlbGVjdGVkLWZpbGVcIikgc2VsZWN0ZWRGaWxlID0gdHJ1ZTtcblxuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tZmlsZV9fc2VsZWN0ZWQtZmlsZS0taW52YWxpZFwiKSBnZXQgaXNJbnZhbGlkVGV4dCgpIHtcblx0XHRyZXR1cm4gdGhpcy5maWxlSXRlbS5pbnZhbGlkVGV4dDtcblx0fVxuXG5cdGNvbnN0cnVjdG9yKHByb3RlY3RlZCBpMThuOiBJMThuKSB7fVxuXG5cdG5nT25EZXN0cm95KCkge1xuXHRcdHRoaXMucmVtb3ZlLmVtaXQoKTtcblx0fVxufVxuIl19