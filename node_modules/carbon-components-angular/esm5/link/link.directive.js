/**
 *
 * carbon-angular v0.0.0 | link.directive.js
 *
 * Copyright 2014, 2022 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Directive, HostBinding, Input } from "@angular/core";
/**
 * A convenience directive for applying styling to a link.
 *
 * [See demo](../../?path=/story/components-link--basic)
 *
 * Example:
 *
 * ```html
 * <a href="#" ibmLink>A link</a>
 * ```
 *
 * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/link/code) for more detail.
 *
 * <example-url>../../iframe.html?id=components-link--basic</example-url>
 */
var Link = /** @class */ (function () {
    function Link() {
        this.baseClass = true;
        /**
         * Set to true to show links inline in a sentence or paragraph.
         */
        this.inline = false;
    }
    Object.defineProperty(Link.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        /**
         * Set to true to disable link.
         */
        set: function (disabled) {
            this._disabled = disabled;
            this.tabindex = this.disabled ? -1 : null;
        },
        enumerable: true,
        configurable: true
    });
    Link.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmLink]"
                },] }
    ];
    Link.propDecorators = {
        baseClass: [{ type: HostBinding, args: ["class.bx--link",] }],
        tabindex: [{ type: HostBinding, args: ["attr.tabindex",] }],
        inline: [{ type: Input }, { type: HostBinding, args: ["class.bx--link--inline",] }],
        disabled: [{ type: Input }, { type: HostBinding, args: ["attr.aria-disabled",] }, { type: HostBinding, args: ["class.bx--link--disabled",] }]
    };
    return Link;
}());
export { Link };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluay5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2xpbmsvIiwic291cmNlcyI6WyJsaW5rLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULFdBQVcsRUFDWCxLQUFLLEVBQ0wsTUFBTSxlQUFlLENBQUM7QUFFdkI7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSDtJQUFBO1FBTWdDLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFPaEQ7O1dBRUc7UUFFb0MsV0FBTSxHQUFHLEtBQUssQ0FBQztJQWtCdkQsQ0FBQztJQWJBLHNCQUdJLDBCQUFRO2FBS1o7WUFDQyxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDdkIsQ0FBQztRQWJEOztXQUVHO2FBQ0gsVUFHYSxRQUFpQjtZQUM3QixJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztZQUMxQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDM0MsQ0FBQzs7O09BQUE7O2dCQTVCRCxTQUFTLFNBQUM7b0JBQ1YsUUFBUSxFQUFFLFdBQVc7aUJBQ3JCOzs7NEJBSUMsV0FBVyxTQUFDLGdCQUFnQjsyQkFLNUIsV0FBVyxTQUFDLGVBQWU7eUJBSzNCLEtBQUssWUFDTCxXQUFXLFNBQUMsd0JBQXdCOzJCQUtwQyxLQUFLLFlBQ0wsV0FBVyxTQUFDLG9CQUFvQixjQUNoQyxXQUFXLFNBQUMsMEJBQTBCOztJQVd4QyxXQUFDO0NBQUEsQUFuQ0QsSUFtQ0M7U0E5QlksSUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdERpcmVjdGl2ZSxcblx0SG9zdEJpbmRpbmcsXG5cdElucHV0XG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbi8qKlxuICogQSBjb252ZW5pZW5jZSBkaXJlY3RpdmUgZm9yIGFwcGx5aW5nIHN0eWxpbmcgdG8gYSBsaW5rLlxuICpcbiAqIFtTZWUgZGVtb10oLi4vLi4vP3BhdGg9L3N0b3J5L2NvbXBvbmVudHMtbGluay0tYmFzaWMpXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGBodG1sXG4gKiA8YSBocmVmPVwiI1wiIGlibUxpbms+QSBsaW5rPC9hPlxuICogYGBgXG4gKlxuICogU2VlIHRoZSBbdmFuaWxsYSBjYXJib24gZG9jc10oaHR0cDovL3d3dy5jYXJib25kZXNpZ25zeXN0ZW0uY29tL2NvbXBvbmVudHMvbGluay9jb2RlKSBmb3IgbW9yZSBkZXRhaWwuXG4gKlxuICogPGV4YW1wbGUtdXJsPi4uLy4uL2lmcmFtZS5odG1sP2lkPWNvbXBvbmVudHMtbGluay0tYmFzaWM8L2V4YW1wbGUtdXJsPlxuICovXG5ARGlyZWN0aXZlKHtcblx0c2VsZWN0b3I6IFwiW2libUxpbmtdXCJcbn0pXG5cblxuZXhwb3J0IGNsYXNzIExpbmsge1xuXHRASG9zdEJpbmRpbmcoXCJjbGFzcy5ieC0tbGlua1wiKSBiYXNlQ2xhc3MgPSB0cnVlO1xuXG5cdC8qKlxuXHQgKiBBdXRvbWF0aWNhbGx5IHNldCB0byBgLTFgIHdoZW4gbGluayBpcyBkaXNhYmxlZC5cblx0ICovXG5cdEBIb3N0QmluZGluZyhcImF0dHIudGFiaW5kZXhcIikgdGFiaW5kZXg7XG5cblx0LyoqXG5cdCAqIFNldCB0byB0cnVlIHRvIHNob3cgbGlua3MgaW5saW5lIGluIGEgc2VudGVuY2Ugb3IgcGFyYWdyYXBoLlxuXHQgKi9cblx0QElucHV0KClcblx0QEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLWxpbmstLWlubGluZVwiKSBpbmxpbmUgPSBmYWxzZTtcblxuXHQvKipcblx0ICogU2V0IHRvIHRydWUgdG8gZGlzYWJsZSBsaW5rLlxuXHQgKi9cblx0QElucHV0KClcblx0QEhvc3RCaW5kaW5nKFwiYXR0ci5hcmlhLWRpc2FibGVkXCIpXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1saW5rLS1kaXNhYmxlZFwiKVxuXHRzZXQgZGlzYWJsZWQoZGlzYWJsZWQ6IGJvb2xlYW4pIHtcblx0XHR0aGlzLl9kaXNhYmxlZCA9IGRpc2FibGVkO1xuXHRcdHRoaXMudGFiaW5kZXggPSB0aGlzLmRpc2FibGVkID8gLTEgOiBudWxsO1xuXHR9XG5cblx0Z2V0IGRpc2FibGVkKCk6IGJvb2xlYW4ge1xuXHRcdHJldHVybiB0aGlzLl9kaXNhYmxlZDtcblx0fVxuXG5cdHByaXZhdGUgX2Rpc2FibGVkO1xufVxuIl19