/**
 *
 * carbon-angular v0.0.0 | loading.component.js
 *
 * Copyright 2014, 2022 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, HostBinding } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
/**
 * [See demo](../../?path=/story/components-loading--basic)
 *
 * <example-url>../../iframe.html?id=components-loading--basic</example-url>
 */
var Loading = /** @class */ (function () {
    function Loading(i18n) {
        this.i18n = i18n;
        /**
         * Accessible title for the loading circle.
         * Defaults to the `LOADING.TITLE` value from the i18n service.
         */
        this.title = this.i18n.get().LOADING.TITLE;
        /**
         * set to `false` to stop the loading animation
         */
        this.isActive = true;
        /**
         * Specify the size of the button
         */
        this.size = "normal";
        /**
         * Set to `true` to make loader with an overlay.
         */
        this.overlay = false;
    }
    Loading.decorators = [
        { type: Component, args: [{
                    selector: "ibm-loading",
                    template: "\n\t\t<div\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--loading--small': size === 'sm',\n\t\t\t\t'bx--loading--stop': !isActive && !overlay,\n\t\t\t\t'bx--loading-overlay--stop': !isActive && overlay\n\t\t\t}\"\n\t\t\tclass=\"bx--loading\">\n\t\t\t<svg class=\"bx--loading__svg\" viewBox=\"0 0 100 100\">\n\t\t\t\t<title>{{title}}</title>\n\t\t\t\t<circle class=\"bx--loading__stroke\" cx=\"50%\" cy=\"50%\" r=\"44\" />\n\t\t\t</svg>\n\t\t</div>\n\t"
                }] }
    ];
    /** @nocollapse */
    Loading.ctorParameters = function () { return [
        { type: I18n }
    ]; };
    Loading.propDecorators = {
        title: [{ type: Input }],
        isActive: [{ type: Input }],
        size: [{ type: Input }],
        overlay: [{ type: Input }, { type: HostBinding, args: ["class.bx--loading-overlay",] }]
    };
    return Loading;
}());
export { Loading };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2xvYWRpbmcvIiwic291cmNlcyI6WyJsb2FkaW5nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRXREOzs7O0dBSUc7QUFDSDtJQXVDQyxpQkFBc0IsSUFBVTtRQUFWLFNBQUksR0FBSixJQUFJLENBQU07UUFyQmhDOzs7V0FHRztRQUNNLFVBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFFL0M7O1dBRUc7UUFDTSxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBRXpCOztXQUVHO1FBQ00sU0FBSSxHQUFvQixRQUFRLENBQUM7UUFFMUM7O1dBRUc7UUFDZ0QsWUFBTyxHQUFHLEtBQUssQ0FBQztJQUVoQyxDQUFDOztnQkF2Q3BDLFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUsYUFBYTtvQkFDdkIsUUFBUSxFQUFFLHliQWFUO2lCQUNEOzs7O2dCQXZCUSxJQUFJOzs7d0JBNkJYLEtBQUs7MkJBS0wsS0FBSzt1QkFLTCxLQUFLOzBCQUtMLEtBQUssWUFBSSxXQUFXLFNBQUMsMkJBQTJCOztJQUdsRCxjQUFDO0NBQUEsQUF4Q0QsSUF3Q0M7U0F2QlksT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEhvc3RCaW5kaW5nIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEkxOG4gfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9pMThuXCI7XG5cbi8qKlxuICogW1NlZSBkZW1vXSguLi8uLi8/cGF0aD0vc3RvcnkvY29tcG9uZW50cy1sb2FkaW5nLS1iYXNpYylcbiAqXG4gKiA8ZXhhbXBsZS11cmw+Li4vLi4vaWZyYW1lLmh0bWw/aWQ9Y29tcG9uZW50cy1sb2FkaW5nLS1iYXNpYzwvZXhhbXBsZS11cmw+XG4gKi9cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tbG9hZGluZ1wiLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxkaXZcblx0XHRcdFtuZ0NsYXNzXT1cIntcblx0XHRcdFx0J2J4LS1sb2FkaW5nLS1zbWFsbCc6IHNpemUgPT09ICdzbScsXG5cdFx0XHRcdCdieC0tbG9hZGluZy0tc3RvcCc6ICFpc0FjdGl2ZSAmJiAhb3ZlcmxheSxcblx0XHRcdFx0J2J4LS1sb2FkaW5nLW92ZXJsYXktLXN0b3AnOiAhaXNBY3RpdmUgJiYgb3ZlcmxheVxuXHRcdFx0fVwiXG5cdFx0XHRjbGFzcz1cImJ4LS1sb2FkaW5nXCI+XG5cdFx0XHQ8c3ZnIGNsYXNzPVwiYngtLWxvYWRpbmdfX3N2Z1wiIHZpZXdCb3g9XCIwIDAgMTAwIDEwMFwiPlxuXHRcdFx0XHQ8dGl0bGU+e3t0aXRsZX19PC90aXRsZT5cblx0XHRcdFx0PGNpcmNsZSBjbGFzcz1cImJ4LS1sb2FkaW5nX19zdHJva2VcIiBjeD1cIjUwJVwiIGN5PVwiNTAlXCIgcj1cIjQ0XCIgLz5cblx0XHRcdDwvc3ZnPlxuXHRcdDwvZGl2PlxuXHRgXG59KVxuZXhwb3J0IGNsYXNzIExvYWRpbmcge1xuXHQvKipcblx0ICogQWNjZXNzaWJsZSB0aXRsZSBmb3IgdGhlIGxvYWRpbmcgY2lyY2xlLlxuXHQgKiBEZWZhdWx0cyB0byB0aGUgYExPQURJTkcuVElUTEVgIHZhbHVlIGZyb20gdGhlIGkxOG4gc2VydmljZS5cblx0ICovXG5cdEBJbnB1dCgpIHRpdGxlID0gdGhpcy5pMThuLmdldCgpLkxPQURJTkcuVElUTEU7XG5cblx0LyoqXG5cdCAqIHNldCB0byBgZmFsc2VgIHRvIHN0b3AgdGhlIGxvYWRpbmcgYW5pbWF0aW9uXG5cdCAqL1xuXHRASW5wdXQoKSBpc0FjdGl2ZSA9IHRydWU7XG5cblx0LyoqXG5cdCAqIFNwZWNpZnkgdGhlIHNpemUgb2YgdGhlIGJ1dHRvblxuXHQgKi9cblx0QElucHV0KCkgc2l6ZTogXCJub3JtYWxcIiB8IFwic21cIiA9IFwibm9ybWFsXCI7XG5cblx0LyoqXG5cdCAqIFNldCB0byBgdHJ1ZWAgdG8gbWFrZSBsb2FkZXIgd2l0aCBhbiBvdmVybGF5LlxuXHQgKi9cblx0QElucHV0KCkgQEhvc3RCaW5kaW5nKFwiY2xhc3MuYngtLWxvYWRpbmctb3ZlcmxheVwiKSBvdmVybGF5ID0gZmFsc2U7XG5cblx0Y29uc3RydWN0b3IocHJvdGVjdGVkIGkxOG46IEkxOG4pIHt9XG59XG4iXX0=