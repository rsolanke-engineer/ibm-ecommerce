/**
 *
 * carbon-angular v0.0.0 | modal-header.component.js
 *
 * Copyright 2014, 2022 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Output, EventEmitter, Input } from "@angular/core";
import { I18n } from "carbon-components-angular/i18n";
import { ExperimentalService } from "carbon-components-angular/experimental";
/**
 * ***Inputs***
 * ```html
 * <ibm-modal-header>Header text</ibm-modal-header>
 * ```
 *
 * ***Outputs***
 * ```html
 * <ibm-modal-header (closeSelect)="closeModal()">Header text</ibm-modal-header>
 * ```
 */
var ModalHeader = /** @class */ (function () {
    function ModalHeader(i18n, experimental) {
        this.i18n = i18n;
        this.experimental = experimental;
        /**
         * Sets the style on the modal heading based on its category.
         */
        this.theme = "default";
        /**
         * Accessible label for the header close button.
         * Defaults to the `MODAL.CLOSE` value from the i18n service.
         */
        this.closeLabel = this.i18n.get().MODAL.CLOSE;
        /**
         * Set to `false` to hide the close button.
         */
        this.showCloseButton = true;
        /**
         * To emit the event of clicking on the close icon within the modal.
         */
        this.closeSelect = new EventEmitter();
    }
    /**
     * Handles click for the close icon button within the `Modal`.
     */
    ModalHeader.prototype.onClose = function () {
        this.closeSelect.emit();
    };
    ModalHeader.decorators = [
        { type: Component, args: [{
                    selector: "ibm-modal-header",
                    template: "\n\t\t<header class=\"{{theme}} bx--modal-header\">\n\t\t\t<ng-content></ng-content>\n\t\t\t<button\n\t\t\t\t*ngIf=\"showCloseButton\"\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"bx--modal-close\"\n\t\t\t\t(click)=\"onClose()\">\n\t\t\t\t<span class=\"bx--assistive-text\">{{ closeLabel }}</span>\n\t\t\t\t<svg ibmIcon=\"close\" size=\"20\" class=\"bx--modal-close__icon\"></svg>\n\t\t\t</button>\n\t\t</header>\n\n\t"
                }] }
    ];
    /** @nocollapse */
    ModalHeader.ctorParameters = function () { return [
        { type: I18n },
        { type: ExperimentalService }
    ]; };
    ModalHeader.propDecorators = {
        theme: [{ type: Input }],
        closeLabel: [{ type: Input }],
        showCloseButton: [{ type: Input }],
        closeSelect: [{ type: Output }]
    };
    return ModalHeader;
}());
export { ModalHeader };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvbW9kYWwvIiwic291cmNlcyI6WyJtb2RhbC1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixTQUFTLEVBQ1QsTUFBTSxFQUNOLFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3RELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBRTdFOzs7Ozs7Ozs7O0dBVUc7QUFDSDtJQXFDQyxxQkFBc0IsSUFBVSxFQUFZLFlBQWlDO1FBQXZELFNBQUksR0FBSixJQUFJLENBQU07UUFBWSxpQkFBWSxHQUFaLFlBQVksQ0FBcUI7UUFuQjdFOztXQUVHO1FBQ00sVUFBSyxHQUFHLFNBQVMsQ0FBQztRQUMzQjs7O1dBR0c7UUFDTSxlQUFVLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO1FBQ2xEOztXQUVHO1FBQ00sb0JBQWUsR0FBRyxJQUFJLENBQUM7UUFFaEM7O1dBRUc7UUFDTyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFFcUMsQ0FBQztJQUVqRjs7T0FFRztJQUNJLDZCQUFPLEdBQWQ7UUFDQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3pCLENBQUM7O2dCQTVDRCxTQUFTLFNBQUM7b0JBQ1YsUUFBUSxFQUFFLGtCQUFrQjtvQkFDNUIsUUFBUSxFQUFFLGlhQWFUO2lCQUNEOzs7O2dCQTlCUSxJQUFJO2dCQUNKLG1CQUFtQjs7O3dCQWtDMUIsS0FBSzs2QkFLTCxLQUFLO2tDQUlMLEtBQUs7OEJBS0wsTUFBTTs7SUFVUixrQkFBQztDQUFBLEFBN0NELElBNkNDO1NBNUJZLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdE91dHB1dCxcblx0RXZlbnRFbWl0dGVyLFxuXHRJbnB1dFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgSTE4biB9IGZyb20gXCJjYXJib24tY29tcG9uZW50cy1hbmd1bGFyL2kxOG5cIjtcbmltcG9ydCB7IEV4cGVyaW1lbnRhbFNlcnZpY2UgfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9leHBlcmltZW50YWxcIjtcblxuLyoqXG4gKiAqKipJbnB1dHMqKipcbiAqIGBgYGh0bWxcbiAqIDxpYm0tbW9kYWwtaGVhZGVyPkhlYWRlciB0ZXh0PC9pYm0tbW9kYWwtaGVhZGVyPlxuICogYGBgXG4gKlxuICogKioqT3V0cHV0cyoqKlxuICogYGBgaHRtbFxuICogPGlibS1tb2RhbC1oZWFkZXIgKGNsb3NlU2VsZWN0KT1cImNsb3NlTW9kYWwoKVwiPkhlYWRlciB0ZXh0PC9pYm0tbW9kYWwtaGVhZGVyPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tbW9kYWwtaGVhZGVyXCIsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PGhlYWRlciBjbGFzcz1cInt7dGhlbWV9fSBieC0tbW9kYWwtaGVhZGVyXCI+XG5cdFx0XHQ8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG5cdFx0XHQ8YnV0dG9uXG5cdFx0XHRcdCpuZ0lmPVwic2hvd0Nsb3NlQnV0dG9uXCJcblx0XHRcdFx0dHlwZT1cImJ1dHRvblwiXG5cdFx0XHRcdGNsYXNzPVwiYngtLW1vZGFsLWNsb3NlXCJcblx0XHRcdFx0KGNsaWNrKT1cIm9uQ2xvc2UoKVwiPlxuXHRcdFx0XHQ8c3BhbiBjbGFzcz1cImJ4LS1hc3Npc3RpdmUtdGV4dFwiPnt7IGNsb3NlTGFiZWwgfX08L3NwYW4+XG5cdFx0XHRcdDxzdmcgaWJtSWNvbj1cImNsb3NlXCIgc2l6ZT1cIjIwXCIgY2xhc3M9XCJieC0tbW9kYWwtY2xvc2VfX2ljb25cIj48L3N2Zz5cblx0XHRcdDwvYnV0dG9uPlxuXHRcdDwvaGVhZGVyPlxuXG5cdGBcbn0pXG5leHBvcnQgY2xhc3MgTW9kYWxIZWFkZXIge1xuXHQvKipcblx0ICogU2V0cyB0aGUgc3R5bGUgb24gdGhlIG1vZGFsIGhlYWRpbmcgYmFzZWQgb24gaXRzIGNhdGVnb3J5LlxuXHQgKi9cblx0QElucHV0KCkgdGhlbWUgPSBcImRlZmF1bHRcIjtcblx0LyoqXG5cdCAqIEFjY2Vzc2libGUgbGFiZWwgZm9yIHRoZSBoZWFkZXIgY2xvc2UgYnV0dG9uLlxuXHQgKiBEZWZhdWx0cyB0byB0aGUgYE1PREFMLkNMT1NFYCB2YWx1ZSBmcm9tIHRoZSBpMThuIHNlcnZpY2UuXG5cdCAqL1xuXHRASW5wdXQoKSBjbG9zZUxhYmVsID0gdGhpcy5pMThuLmdldCgpLk1PREFMLkNMT1NFO1xuXHQvKipcblx0ICogU2V0IHRvIGBmYWxzZWAgdG8gaGlkZSB0aGUgY2xvc2UgYnV0dG9uLlxuXHQgKi9cblx0QElucHV0KCkgc2hvd0Nsb3NlQnV0dG9uID0gdHJ1ZTtcblxuXHQvKipcblx0ICogVG8gZW1pdCB0aGUgZXZlbnQgb2YgY2xpY2tpbmcgb24gdGhlIGNsb3NlIGljb24gd2l0aGluIHRoZSBtb2RhbC5cblx0ICovXG5cdEBPdXRwdXQoKSBjbG9zZVNlbGVjdCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuXHRjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaTE4bjogSTE4biwgcHJvdGVjdGVkIGV4cGVyaW1lbnRhbDogRXhwZXJpbWVudGFsU2VydmljZSkge31cblxuXHQvKipcblx0ICogSGFuZGxlcyBjbGljayBmb3IgdGhlIGNsb3NlIGljb24gYnV0dG9uIHdpdGhpbiB0aGUgYE1vZGFsYC5cblx0ICovXG5cdHB1YmxpYyBvbkNsb3NlKCkge1xuXHRcdHRoaXMuY2xvc2VTZWxlY3QuZW1pdCgpO1xuXHR9XG59XG4iXX0=