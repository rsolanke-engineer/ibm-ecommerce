/**
 *
 * carbon-angular v0.0.0 | table-toolbar-search.component.js
 *
 * Copyright 2014, 2022 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import * as tslib_1 from "tslib";
import { Search } from "carbon-components-angular/search";
import { Component, HostBinding } from "@angular/core";
import { NG_VALUE_ACCESSOR } from "@angular/forms";
var TableToolbarSearch = /** @class */ (function (_super) {
    tslib_1.__extends(TableToolbarSearch, _super);
    function TableToolbarSearch() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableSearch = true;
        _this.hostClass = true;
        return _this;
    }
    TableToolbarSearch.prototype.ngAfterViewInit = function () {
        var _this = this;
        setTimeout(function () {
            if (_this.value) {
                _this.openSearch();
            }
        });
    };
    TableToolbarSearch.decorators = [
        { type: Component, args: [{
                    selector: "ibm-table-toolbar-search",
                    template: "<div\n\tclass=\"bx--search\"\n\t[ngClass]=\"{\n\t\t'bx--search--sm': size === 'sm',\n\t\t'bx--search--lg': size === 'md',\n\t\t'bx--search--xl': size === 'xl',\n\t\t'bx--search--light': theme === 'light',\n\t\t'bx--skeleton': skeleton,\n\t\t'bx--search--expandable': expandable && !tableSearch,\n\t\t'bx--search--expanded': expandable && !tableSearch && active,\n\t\t'bx--toolbar-search': toolbar && !expandable,\n\t\t'bx--toolbar-search--active': toolbar && !expandable && active,\n\t\t'bx--toolbar-search-container-persistent': tableSearch && !expandable,\n\t\t'bx--toolbar-search-container-expandable': tableSearch && expandable,\n\t\t'bx--toolbar-search-container-active': tableSearch && expandable && active\n\t}\"\n\trole=\"search\"\n\t[attr.aria-label]=\"ariaLabel\"\n\ttabindex=\"0\"\n\t(click)=\"openSearch()\">\n\t<label class=\"bx--label\" [for]=\"id\">{{label}}</label>\n\n\t<div *ngIf=\"skeleton; else enableInput\" class=\"bx--search-input\"></div>\n\t<ng-template #enableInput>\n\t\t<input\n\t\t\t#input\n\t\t\tclass=\"bx--search-input\"\n\t\t\t[type]=\"tableSearch || !toolbar ? 'text' : 'search'\"\n\t\t\t[id]=\"id\"\n\t\t\t[value]=\"value\"\n\t\t\t[autocomplete]=\"autocomplete\"\n\t\t\t[placeholder]=\"placeholder\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[required]=\"required\"\n\t\t\t(input)=\"onSearch($event.target.value)\"\n\t\t\t(keyup.enter)=\"onEnter()\"/>\n\t\t<button\n\t\t\t*ngIf=\"!tableSearch && toolbar\"\n\t\t\tclass=\"bx--toolbar-search__btn\"\n\t\t\t(click)=\"openSearch()\"\n\t\t\taria-label=\"Open search\">\n\t\t\t<svg ibmIcon=\"search\" size=\"16\" class=\"bx--search-magnifier-icon\"></svg>\n\t\t</button>\n\t\t<svg\n\t\t\tibmIcon=\"search\"\n\t\t\t*ngIf=\"tableSearch || !toolbar\"\n\t\t\tclass=\"bx--search-magnifier-icon\"\n\t\t\tsize=\"16\">\n\t\t</svg>\n\t</ng-template>\n\n\t<button\n\t\t*ngIf=\"tableSearch || !toolbar\"\n\t\tclass=\"bx--search-close\"\n\t\t[ngClass]=\"{\n\t\t\t'bx--search-close--hidden': !value || value.length === 0\n\t\t}\"\n\t\t[title]=\"clearButtonTitle\"\n\t\t(click)=\"clearSearch()\">\n\t\t<span class=\"bx--visually-hidden\">{{ clearButtonTitle }}</span>\n\t\t<svg ibmIcon=\"close\" size=\"16\"></svg>\n\t</button>\n</div>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: TableToolbarSearch,
                            multi: true
                        }
                    ]
                }] }
    ];
    TableToolbarSearch.propDecorators = {
        hostClass: [{ type: HostBinding, args: ["class.bx--toolbar-content",] }]
    };
    return TableToolbarSearch;
}(Search));
export { TableToolbarSearch };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtdG9vbGJhci1zZWFyY2guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci90YWJsZS8iLCJzb3VyY2VzIjpbInRvb2xiYXIvdGFibGUtdG9vbGJhci1zZWFyY2guY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDMUQsT0FBTyxFQUNOLFNBQVMsRUFDVCxXQUFXLEVBSVgsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkQ7SUFXd0MsOENBQU07SUFYOUM7UUFBQSxxRUF1QkM7UUFYQSxpQkFBVyxHQUFHLElBQUksQ0FBQztRQUV1QixlQUFTLEdBQUcsSUFBSSxDQUFDOztJQVM1RCxDQUFDO0lBUEEsNENBQWUsR0FBZjtRQUFBLGlCQU1DO1FBTEEsVUFBVSxDQUFDO1lBQ1YsSUFBSSxLQUFJLENBQUMsS0FBSyxFQUFFO2dCQUNmLEtBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQzthQUNsQjtRQUNGLENBQUMsQ0FBQyxDQUFDO0lBQ0osQ0FBQzs7Z0JBdEJELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUsMEJBQTBCO29CQUNwQyxrcUVBQWlEO29CQUNqRCxTQUFTLEVBQUU7d0JBQ1Y7NEJBQ0MsT0FBTyxFQUFFLGlCQUFpQjs0QkFDMUIsV0FBVyxFQUFFLGtCQUFrQjs0QkFDL0IsS0FBSyxFQUFFLElBQUk7eUJBQ1g7cUJBQ0Q7aUJBQ0Q7Ozs0QkFJQyxXQUFXLFNBQUMsMkJBQTJCOztJQVN6Qyx5QkFBQztDQUFBLEFBdkJELENBV3dDLE1BQU0sR0FZN0M7U0FaWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZWFyY2ggfSBmcm9tIFwiY2FyYm9uLWNvbXBvbmVudHMtYW5ndWxhci9zZWFyY2hcIjtcbmltcG9ydCB7XG5cdENvbXBvbmVudCxcblx0SG9zdEJpbmRpbmcsXG5cdElucHV0LFxuXHRPbkluaXQsXG5cdEFmdGVyVmlld0luaXRcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0tdGFibGUtdG9vbGJhci1zZWFyY2hcIixcblx0dGVtcGxhdGVVcmw6IFwiLi4vLi4vc2VhcmNoL3NlYXJjaC5jb21wb25lbnQuaHRtbFwiLFxuXHRwcm92aWRlcnM6IFtcblx0XHR7XG5cdFx0XHRwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcblx0XHRcdHVzZUV4aXN0aW5nOiBUYWJsZVRvb2xiYXJTZWFyY2gsXG5cdFx0XHRtdWx0aTogdHJ1ZVxuXHRcdH1cblx0XVxufSlcbmV4cG9ydCBjbGFzcyBUYWJsZVRvb2xiYXJTZWFyY2ggZXh0ZW5kcyBTZWFyY2ggaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcblx0dGFibGVTZWFyY2ggPSB0cnVlO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS10b29sYmFyLWNvbnRlbnRcIikgaG9zdENsYXNzID0gdHJ1ZTtcblxuXHRuZ0FmdGVyVmlld0luaXQoKSB7XG5cdFx0c2V0VGltZW91dCgoKSA9PiB7XG5cdFx0XHRpZiAodGhpcy52YWx1ZSkge1xuXHRcdFx0XHR0aGlzLm9wZW5TZWFyY2goKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxufVxuIl19